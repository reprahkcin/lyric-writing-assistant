{"version":3,"file":"js/app.b553a5c7.js","mappings":"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,2DACA,0EACA,mDACA,mDACA,2CACA,iDACA,4CACA,2EACA,wDACA,oDACA,kDACA,wDACA,gEACA,6CACA,mDACA,yDACA,wCACA,4DACA,wDACA,gDACA,mDACA,6DACA,oEACA,4CACA,yDACA,8DACA,mEACA,gDACA,2DACA,kDACA,uDACA,kDACA,4DACA,+DACA,4DACA,6CACA,wDACA,0CACA,yCACA,oCACA,0DACA,iDACA,iEACA,6CACA,mDACA,uEACA,6CACA,sDACA,kEACA,8DACA,sDACA,uEACA,6DACA,4DACA,qEACA,2DACA,0CACA,4DACA,4DACA,2CACA,2CACA,+CACA,uDACA,oCACA,sDACA,mDACA,8DACA,iEACA,gEACA,gDACA,iDACA,yEACA,wDACA,+CACA,wDACA,yDACA,iDACA,0DACA,uEACA,oDACA,kDACA,uEACA,0DACA,iEACA,iEACA,gDACA,wDACA,0DACA,8DACA,yDACA,8DACA,kEACA,4DACA,8DACA,0DACA,qEACA,+DACA,0CACA,2EACA,sDACA,8DACA,wCACA,gFACA,sDACA,sEACA,iDACA,sDACA,uDACA,yCACA,+CACA,8DACA,mDACA,0EACA,0DACA,0DACA,sEACA,oCACA,oEACA,sDACA,2DACA,0DACA,sEACA,wEACA,sEACA,kDACA,uEACA,kDACA,2DACA,mFACA,6DACA,oEACA,uDACA,sEACA,oEACA,qDACA,wEACA,8CACA,6DACA,0DACA,oDACA,uEACA,sEACA,0DACA,iFACA,kCACA,oEACA,kDACA,mDACA,uDACA,uEACA,qEACA,uDACA,qDACA,gDACA,6DACA,iDACA,yCACA,qDACA,sDACA,yCACA,uDACA,4DACA,mDACA,oEACA,uDACA,0DACA,wDACA,mEACA,mDACA,0DACA,8CACA,oEACA,yDACA,4DACA,iEACA,qDACA,iDACA,yDACA,qDACA,wDACA,+DACA,2DACA,8DACA,+DACA,uDACA,oEACA,gEACA,uDACA,sDACA,0DACA,sDACA,8DACA,wDACA,6CACA,6DACA,gDACA,yCACA,+DACA,qEACA,iEACA,mDACA,yDACA,+CACA,mEACA,iEACA,+DACA,wDACA,2DACA,4CACA,gEACA,8CACA,0DACA,uDACA,gEACA,4DACA,6DACA,iDACA,+DACA,4DACA,mEACA,4DACA,kEACA,gDACA,4DACA,2CACA,yDACA,yDACA,iEACA,2DACA,+DACA,+DACA,yDACA,0DACA,6DACA,4DACA,gEACA,yDACA,mEACA,iEACA,yDACA,oDACA,kEACA,2DACA,8DACA,uDACA,iEAGJ,UCzOA,MAAMC,IAAQC,EAAAA,EAAAA,IAAY,CACxBC,MAAO,CACL1Y,MAAO2Y,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GACpDhZ,WAAY6Y,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,KAG9DvB,gBAAgB,EAChBG,iBAAgB,GAChBC,MAAK,GACLC,KAAI,GACJC,OAAM,GACNkB,kBAAiB,GACjBC,kBAAiB,GACjBC,mBAAkB,GAClBC,qBAAoB,GACpBC,mBAAkB,GAClBC,uBAAsB,GACtBC,oBAAmB,GACnBC,4BAA2B,GAC3BC,uBAAsB,GACtBC,4BAA2B,GAC3BC,uBAAsB,GACtBC,qBAAoB,GACpBC,yBAAwB,GACxBpB,QAAO,GACPqB,kBAAmB,IAErBC,UAAW,CACTC,mBAAAA,CAAoBpB,EAAOlW,GAEzBkW,EAAMnB,eAAiB/U,CACzB,EACAuX,SAAAA,CAAUrB,EAAOlW,GAEfkW,EAAM1Y,MAAQwC,CAChB,EACAwX,QAAAA,CAAStB,EAAOlW,GAEdkW,EAAM1Y,MAAMoY,KAAK5V,EACnB,EACAyX,WAAAA,CAAYvB,EAAOlW,GAEjB,MAAMsE,EAAQ4R,EAAM1Y,MAAMka,WAAW/Z,GAASA,EAAKJ,KAAOyC,KAE3C,IAAXsE,GACF4R,EAAM1Y,MAAMma,OAAOrT,EAAO,EAE9B,EACAsT,WAAAA,CAAY1B,EAAOlW,GAEjB,MAAMsE,EAAQ4R,EAAM1Y,MAAMka,WAAW/Z,GAASA,EAAKJ,KAAOyC,EAAMzC,MAEjD,IAAX+G,IACF4R,EAAM1Y,MAAM8G,GAAS,IAChB4R,EAAM1Y,MAAM8G,MACZtE,EACHsT,UAAU,IAAI1B,MAAOiG,gBAIrB7X,EAAMzC,KAAO2Y,EAAM5Y,YAAYC,KACjC2Y,EAAM5Y,WAAa,IAAK0C,GAE5B,EACA8X,eAAAA,CAAgB5B,EAAOlW,GAErBkW,EAAM5Y,WAAa,IAAK0C,EAC1B,EAGA+X,0BAAAA,CAA2B7B,EAAO5W,GAChC,MAAMgF,EAAQ4R,EAAM5Y,WAAW8B,SAASsY,WAAWpM,GAAQA,EAAI/N,KAAO+B,EAAQ/B,MAC/D,IAAX+G,GACF4R,EAAM5Y,WAAW8B,SAASuY,OAAOrT,EAAO,EAAGhF,EAE/C,EACA0Y,wBAAAA,CAAyB9B,GAAO,MAAE5R,EAAK,UAAEkH,IACrB,OAAdA,GAAsBlH,EAAQ,GAC/B4R,EAAM5Y,WAAW8B,SAASkF,EAAQ,GAAI4R,EAAM5Y,WAAW8B,SAASkF,IAAU,CACzE4R,EAAM5Y,WAAW8B,SAASkF,GAC1B4R,EAAM5Y,WAAW8B,SAASkF,EAAQ,IAEb,SAAdkH,GAAwBlH,EAAQ4R,EAAM5Y,WAAW8B,SAAS3B,OAAS,KAC3EyY,EAAM5Y,WAAW8B,SAASkF,EAAQ,GAAI4R,EAAM5Y,WAAW8B,SAASkF,IAAU,CACzE4R,EAAM5Y,WAAW8B,SAASkF,GAC1B4R,EAAM5Y,WAAW8B,SAASkF,EAAQ,IAGxC,EACA2T,uBAAAA,CAAwB/B,EAAO5W,GAC7B,MAAMqO,EAAa,IACdrO,EACHyF,aAAa,GAEfmR,EAAM5Y,WAAW8B,SAASwW,KAAKjI,EACjC,EACAuK,0BAAAA,CAA2BhC,EAAO1R,GAChC0R,EAAM5Y,WAAW8B,SAAW8W,EAAM5Y,WAAW8B,SAASqK,QAAQnK,GAAYA,EAAQ/B,KAAOiH,GAC3F,EAGA2T,uBAAAA,CAAwBjC,GAAO,UAAE1R,EAAS,UAAEuH,EAAS,QAAEF,IACrD,MAAMvM,EAAU4W,EAAM5Y,WAAW8B,SAASiM,MAAMC,GAAQA,EAAI/N,KAAOiH,IAC/DlF,GACFA,EAAQI,MAAMiY,OAAO5L,EAAW,EAAGF,EAEvC,EACAuM,oBAAAA,CAAqBlC,GAAO,UAAE1R,EAAS,QAAEqH,IACvC,MAAMvM,EAAU4W,EAAM5Y,WAAW8B,SAASiM,MAAMC,GAAQA,EAAI/N,KAAOiH,IAC/DlF,GACFA,EAAQI,MAAMkW,KAAK/J,EAEvB,EACAwM,uBAAAA,CAAwBnC,GAAO,UAAE1R,EAAS,UAAEuH,IAC1C,MAAMzM,EAAU4W,EAAM5Y,WAAW8B,SAASiM,MAAMC,GAAQA,EAAI/N,KAAOiH,IAC/DlF,GACFA,EAAQI,MAAMiY,OAAO5L,EAAW,EAEpC,EACAuM,sBAAAA,CAAuBpC,EAAOqC,GAC5BrC,EAAMkB,kBAAoBmB,CAC5B,EACAC,gBAAAA,CAAiBtC,GACf,MAAM5R,EAAQ4R,EAAM1Y,MAAMka,WAAU/Z,GAAQA,EAAKJ,KAAO2Y,EAAM5Y,WAAWC,MAC1D,IAAX+G,IACF4R,EAAM1Y,MAAM8G,GAAS,IAAK4R,EAAM5Y,YAEpC,GAEFmb,QAAS,CACPlT,iBAAAA,EAAkB,OAAEmT,GAAU1Y,GAE5B0Y,EAAO,sBAAuB1Y,EAChC,EACA+T,QAAAA,EAAS,OAAE2E,GAAU1Y,GAEnB0Y,EAAO,YAAa1Y,EACtB,EACAyT,OAAAA,EAAQ,OAAEiF,EAAM,SAAEC,IAEhB,MAAMhb,EAAO,CACXJ,IAAI,IAAIqU,MAAOC,UACf9S,MAAO,WACPC,KAAM,GACNE,KAAM,GACND,MAAO,GACPgE,iBAAkB,GAClB7D,SAAU,GACVkU,UAAU,IAAI1B,MAAOiG,eAGvBa,EAAO,WAAY/a,GACnBgb,EAAS,0BACX,EACA1G,oBAAAA,EAAqB,OAAEyG,EAAM,SAAEC,GAAYrZ,GAEzC,MAAMqO,EAAa,IACdrO,EACHyF,aAAa,GAGf2T,EAAO,0BAA2B/K,GAClCgL,EAAS,0BACX,EACA/E,UAAAA,EAAW,OAAE8E,EAAM,SAAEC,GAAY3Y,GAE/B0Y,EAAO,cAAe1Y,GACtB2Y,EAAS,0BACX,EACAnH,UAAAA,EAAW,OAAEkH,EAAM,SAAEC,GAAY3Y,GAE/B0Y,EAAO,cAAe1Y,GACtB2Y,EAAS,0BACX,EACA5G,aAAAA,EAAc,OAAE2G,EAAM,SAAEC,GAAY3Y,GAElC0Y,EAAO,kBAAmB1Y,GAE1B2Y,EAAS,0BACX,EACAzM,uBAAAA,EAAwB,OAAEwM,EAAM,SAAEC,GAAYrZ,GAE5CoZ,EAAO,6BAA8BpZ,GACrCqZ,EAAS,0BACX,EACAC,qBAAAA,EAAsB,OAAEF,EAAM,SAAEC,GAAYE,GAE1CH,EAAO,2BAA4BG,GACnCF,EAAS,0BACX,EACAhN,uBAAAA,EAAwB,OAAE+M,EAAM,SAAEC,GAAYnU,GAE5CkU,EAAO,6BAA8BlU,GACrCmU,EAAS,0BACX,EACAnL,oBAAAA,EAAqB,OAAEkL,EAAM,SAAEC,GAAYE,GAEzCH,EAAO,0BAA2BG,GAElCF,EAAS,0BACX,EACA/M,iBAAAA,EAAkB,OAAE8M,EAAM,SAAEC,GAAYE,GACtCH,EAAO,uBAAwBG,GAC/BF,EAAS,0BACX,EACA7M,oBAAAA,EAAqB,OAAE4M,EAAM,SAAEC,GAAYE,GACzCH,EAAO,0BAA2BG,GAClCF,EAAS,0BACX,EACA7E,UAAAA,EAAW,OAAE4E,EAAM,SAAEC,IAEnBD,EAAO,eACPC,EAAS,0BACX,EACAlH,uBAAAA,EAAwB,MAAEyE,IACxBG,aAAayC,QAAQ,QAAS3C,KAAK4C,UAAU7C,EAAM1Y,QACnD6Y,aAAayC,QAAQ,aAAc3C,KAAK4C,UAAU7C,EAAM5Y,aACxDmN,QAAQC,IAAI,+BACd,EACAsO,yBAAAA,EAA0B,OAAEN,IAC1B,MAAMlb,EAAQ2Y,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GACrDhZ,EAAa6Y,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,KACrEoC,EAAO,YAAalb,GACpBkb,EAAO,kBAAmBpb,GAC1BmN,QAAQC,IAAI,kCACd,EACA6G,uBAAAA,EAAwB,MAAE2E,EAAK,OAAEwC,IAC/B,MAAMtM,EAAc8J,EAAM5Y,YAAYX,IAChC0P,EAAgB6J,EAAMb,OAAOhK,MAChC6D,GAAMA,EAAExQ,OAASwX,EAAM5Y,YAAY6B,QAEtC,GAAIiN,GAAeC,EAAe,CAChC,IAAI+K,EACJ,OAAQ/K,EAAc3N,KAAK+Q,eACzB,IAAK,QACH2H,EAAoBlB,EAAMK,kBAC1B,MACF,IAAK,QACHa,EAAoBlB,EAAMM,kBAC1B,MACF,IAAK,SACHY,EAAoBlB,EAAMO,mBAC1B,MACF,IAAK,WACHW,EAAoBlB,EAAMQ,qBAC1B,MACF,IAAK,SACHU,EAAoBlB,EAAMS,mBAC1B,MACF,IAAK,aACHS,EAAoBlB,EAAMU,uBAC1B,MACF,IAAK,UACHQ,EAAoBlB,EAAMW,oBAC1B,MACF,IAAK,mBACHO,EAAoBlB,EAAMY,4BAC1B,MACF,IAAK,cACHM,EAAoBlB,EAAMa,uBAC1B,MACF,IAAK,mBACHK,EAAoBlB,EAAMc,4BAC1B,MACF,IAAK,cACHI,EAAoBlB,EAAMe,uBAC1B,MACF,IAAK,iBACHG,EAAoBlB,EAAMgB,qBAC1B,MACF,IAAK,gBACHE,EAAoBlB,EAAMiB,yBAC1B,MACF,QACEC,EAAoB,GAExBsB,EAAO,yBAA0BtB,EACnC,MACEsB,EAAO,yBAA0B,IAC5BxC,EAAMK,qBACNL,EAAMM,mBAGf,EACAyC,aAAAA,EAAc,SAAEN,IACdzR,aAAY,KACVyR,EAAS,0BAA0B,GAClC,IACL,EACA5F,cAAAA,EAAe,OAAE2F,IACfA,EAAO,mBACT,GAEF1J,QAAS,CACPkK,wBAAAA,CAAyBhD,GACvB,OAAOA,EAAMkB,iBACf,EACA5W,iBAAAA,CAAkB0V,GAEhB,OAAOA,EAAMnB,cACf,EACA7B,QAAAA,CAASgD,GAEP,OAAOA,EAAM1Y,KACf,EACAyR,aAAAA,CAAciH,GAEZ,OAAOA,EAAM5Y,UACf,EACA6b,IAAAA,CAAKjD,GAEH,OAAOA,EAAMiD,IACf,EACApV,mBAAAA,CAAoBmS,GAClB,OAAOA,EAAMhB,gBACf,EACA5T,QAAAA,CAAS4U,GACP,OAAOA,EAAMf,KACf,EACAtT,OAAAA,CAAQqU,GACN,OAAOA,EAAMd,IACf,EACAnT,SAAAA,CAAUiU,GACR,OAAOA,EAAMb,MACf,EACA5S,UAAAA,CAAWyT,GACT,OAAOA,EAAMH,OACf,EACAqD,oBAAAA,CAAqBlD,GACnB,OAAOA,EAAMkB,iBACf,EACAhI,qBAAAA,CAAsB8G,GACpB,MAAM7J,EAAgB6J,EAAMb,OAAOhK,MAChC6D,GAAMA,EAAExQ,OAASwX,EAAM5Y,YAAY6B,QAEtC,OAAOkN,EACHA,EAAcC,MAAM4J,EAAM5Y,YAAYX,KACtC,EACN,EACA2S,sBAAAA,CAAuB4G,GACrB,MAAM7J,EAAgB6J,EAAMb,OAAOhK,MAChC6D,GAAMA,EAAExQ,OAASwX,EAAM5Y,YAAY6B,QAEtC,OAAOkN,EAAgBA,EAAcmJ,OAAS,EAChD,EACA6D,eAAiBnD,GAAU,CAACoD,EAAQ9U,KAClC,MAAM7G,EAAOuY,EAAM1Y,MAAM6N,MAAM1N,GAASA,EAAKJ,KAAO+b,IACpD,OAAO3b,EAAOA,EAAKyB,SAASiM,MAAM/L,GAAYA,EAAQ/B,KAAOiH,IAAa,IAAI,KAMpFwR,GAAM2C,SAAS,6BACf3C,GAAM2C,SAAS,iBAEf,U,WCnXA,MAAMY,GAAS,CACb,CACEC,KAAMxD,GAAMhH,QAAQyK,eAAiB,YAAc,IACnD/a,KAAM,eACNgb,UAAW1E,KAIT2E,IAASC,EAAAA,GAAAA,IAAa,CAC1BC,qBAAsB,UACtBC,SAASC,EAAAA,GAAAA,IAAiBC,6BAC1BT,YAGF,UCVAU,eAAeC,MACbC,EAAAA,EAAAA,IAAUC,IAAKC,IAAIrE,IAAOqE,IAAIV,IAAQW,MAAM,OAC9C,CAEAJ,I,kECZIK,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBtJ,EAAI4J,E,WCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,SAASnc,EAAQoc,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASvO,EAAI,EAAGA,EAAIiO,EAASvd,OAAQsP,IAAK,CACrCmO,EAAWF,EAASjO,GAAG,GACvBoO,EAAKH,EAASjO,GAAG,GACjBqO,EAAWJ,EAASjO,GAAG,GAE3B,IAJA,IAGIwO,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASzd,OAAQ+d,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAalN,OAAOkH,KAAKoF,EAAoBS,GAAGQ,OAAM,SAAS9e,GAAO,OAAO6d,EAAoBS,EAAEte,GAAKue,EAASM,GAAK,IAChKN,EAASvD,OAAO6D,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAASrD,OAAO5K,IAAK,GACrB,IAAI2O,EAAIP,SACER,IAANe,IAAiB5c,EAAS4c,EAC/B,CACD,CACA,OAAO5c,CArBP,CAJCsc,EAAWA,GAAY,EACvB,IAAI,IAAIrO,EAAIiO,EAASvd,OAAQsP,EAAI,GAAKiO,EAASjO,EAAI,GAAG,GAAKqO,EAAUrO,IAAKiO,EAASjO,GAAKiO,EAASjO,EAAI,GACrGiO,EAASjO,GAAK,CAACmO,EAAUC,EAAIC,EAwB/B,C,eC5BAZ,EAAoBmB,EAAI,SAASd,GAChC,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,WAAa,OAAOhB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoBsB,EAAEF,EAAQ,CAAE9K,EAAG8K,IAC5BA,CACR,C,eCNApB,EAAoBsB,EAAI,SAASlB,EAASmB,GACzC,IAAI,IAAIpf,KAAOof,EACXvB,EAAoBwB,EAAED,EAAYpf,KAAS6d,EAAoBwB,EAAEpB,EAASje,IAC5EuR,OAAO+N,eAAerB,EAASje,EAAK,CAAEuf,YAAY,EAAM7S,IAAK0S,EAAWpf,IAG3E,C,eCPA6d,EAAoB2B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOvd,MAAQ,IAAIwd,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB/B,EAAoBwB,EAAI,SAASQ,EAAKC,GAAQ,OAAOvO,OAAOwO,UAAUC,eAAe5B,KAAKyB,EAAKC,EAAO,C,eCAtGjC,EAAoBoC,EAAI,2B,eCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNrC,EAAoBS,EAAEO,EAAI,SAASsB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BtW,GAC/D,IAKI+T,EAAUqC,EALV5B,EAAWxU,EAAK,GAChBuW,EAAcvW,EAAK,GACnBwW,EAAUxW,EAAK,GAGIqG,EAAI,EAC3B,GAAGmO,EAASiC,MAAK,SAAS5f,GAAM,OAA+B,IAAxBsf,EAAgBtf,EAAW,IAAI,CACrE,IAAIkd,KAAYwC,EACZzC,EAAoBwB,EAAEiB,EAAaxC,KACrCD,EAAoBtJ,EAAEuJ,GAAYwC,EAAYxC,IAGhD,GAAGyC,EAAS,IAAIpe,EAASoe,EAAQ1C,EAClC,CAEA,IADGwC,GAA4BA,EAA2BtW,GACrDqG,EAAImO,EAASzd,OAAQsP,IACzB+P,EAAU5B,EAASnO,GAChByN,EAAoBwB,EAAEa,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOtC,EAAoBS,EAAEnc,EAC9B,EAEIse,EAAqBC,KAAK,uCAAyCA,KAAK,wCAA0C,GACtHD,EAAmB/d,QAAQ0d,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBxH,KAAOmH,EAAqBO,KAAK,KAAMF,EAAmBxH,KAAK0H,KAAKF,G,IC/CvF,IAAIG,EAAsB/C,EAAoBS,OAAEN,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,IAAM,IAChH+C,EAAsB/C,EAAoBS,EAAEsC,E","sources":["webpack://lyric-writing-assistant/./src/App.vue","webpack://lyric-writing-assistant/./src/views/ActivityView.vue","webpack://lyric-writing-assistant/./src/components/PlainTextLayout.vue","webpack://lyric-writing-assistant/./src/components/PlainTextLayout.vue?85ca","webpack://lyric-writing-assistant/./src/components/SongComplete.vue","webpack://lyric-writing-assistant/./src/components/SongSection.vue","webpack://lyric-writing-assistant/./src/components/CountdownTimer.vue","webpack://lyric-writing-assistant/./src/components/CountdownTimer.vue?f466","webpack://lyric-writing-assistant/./src/components/RhymeThesaurusPanel.vue","webpack://lyric-writing-assistant/./src/components/RhymeThesaurusPanel.vue?8ed0","webpack://lyric-writing-assistant/./src/components/SongSection.vue?75a1","webpack://lyric-writing-assistant/./src/components/ChromeMusicLab.vue","webpack://lyric-writing-assistant/./src/components/ChromeMusicLab.vue?4548","webpack://lyric-writing-assistant/./src/components/ChordTable.vue","webpack://lyric-writing-assistant/./src/components/ChordTable.vue?c322","webpack://lyric-writing-assistant/./src/components/SongComplete.vue?5c33","webpack://lyric-writing-assistant/./src/components/SongLibrary.vue","webpack://lyric-writing-assistant/./src/components/SongLibrary.vue?cb2d","webpack://lyric-writing-assistant/./src/views/ActivityView.vue?3bc8","webpack://lyric-writing-assistant/./src/App.vue?7ccd","webpack://lyric-writing-assistant/./src/data/sectionTemplates.js","webpack://lyric-writing-assistant/./src/data/moods.js","webpack://lyric-writing-assistant/./src/data/keys.js","webpack://lyric-writing-assistant/./src/data/scales.js","webpack://lyric-writing-assistant/./src/data/prompts.js","webpack://lyric-writing-assistant/./src/store/store.js","webpack://lyric-writing-assistant/./src/router/router.js","webpack://lyric-writing-assistant/./src/main.js","webpack://lyric-writing-assistant/webpack/bootstrap","webpack://lyric-writing-assistant/webpack/runtime/chunk loaded","webpack://lyric-writing-assistant/webpack/runtime/compat get default export","webpack://lyric-writing-assistant/webpack/runtime/define property getters","webpack://lyric-writing-assistant/webpack/runtime/global","webpack://lyric-writing-assistant/webpack/runtime/hasOwnProperty shorthand","webpack://lyric-writing-assistant/webpack/runtime/publicPath","webpack://lyric-writing-assistant/webpack/runtime/jsonp chunk loading","webpack://lyric-writing-assistant/webpack/startup"],"sourcesContent":["<template>\n  <ActivityView />\n</template>\n\n<script>\nimport ActivityView from \"@/views/ActivityView.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    ActivityView,\n  },\n};\n</script>\n","<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"row my-3\">\n        <div class=\"col\">\n          <div class=\"card bg-dark ps-3 py-2 text-light shadow text-start\">\n            <p class=\"fw-bold my-auto text-start mb-0\">Welcome, Songwriter</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb-3\">\n        <div class=\"col\">\n          <SongLibrary />\n        </div>\n      </div>\n      <div class=\"row mb-3\">\n        <div class=\"col\">\n          <SongComplete\n            v-if=\"activeSong && activeSong.id && songs.length > 0\"\n            :song=\"activeSong\"\n            :plainTextActive=\"plainTextActive\"\n            @toggle-plain-text=\"togglePlainText\"\n          />\n          <p v-else>\n            Please Add and Select a song in the Song Library to begin\n          </p>\n          <PlainTextLayout\n            v-if=\"\n              activeSong && activeSong.id && plainTextActive && songs.length > 0\n            \"\n            :song=\"activeSong\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PlainTextLayout from \"@/components/PlainTextLayout.vue\";\nimport SongComplete from \"@/components/SongComplete.vue\";\nimport SongLibrary from \"@/components/SongLibrary.vue\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"ActivityView\",\n  components: {\n    SongLibrary,\n    SongComplete,\n    PlainTextLayout,\n  },\n  computed: {\n    ...mapGetters({\n      activeSong: \"getActiveSong\",\n      unsavedChanges: \"getUnsavedChanges\",\n      songs: \"getSongs\",\n    }),\n  },\n  data() {\n    return {\n      plainTextActive: false,\n    };\n  },\n  methods: {\n    ...mapActions([\n      \"updateSong\",\n      \"saveStateToLocalStorage\",\n      \"setUnsavedChanges\",\n    ]),\n    togglePlainText() {\n      this.plainTextActive = !this.plainTextActive;\n    },\n    manualSaveState() {\n      if (this.activeSong) {\n        this.updateSong(this.activeSong);\n      }\n      this.saveStateToLocalStorage();\n      this.setUnsavedChanges(false);\n    },\n  },\n};\n</script>\n","<template>\n  <div class=\"card bg-light text-dark mb-5\">\n    <div class=\"card-header bg-dark text-light\">\n      <p class=\"my-auto fw-bold text-start\">Plain Text Layout</p>\n    </div>\n    <div class=\"card-body text-start\">\n      <pre>{{ formattedSong }}</pre>\n    </div>\n    <div class=\"card-footer text-end\">\n      <button class=\"btn btn-primary btn-sm fw-bold\" @click=\"copyToClipboard\">\n        Copy to Clipboard\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"PlainTextLayout\",\n  computed: {\n    ...mapGetters({ activeSong: \"getActiveSong\" }), // Map Vuex getter to get the active song\n    formattedSong() {\n      // Format the song details into a plain text string\n      if (!this.activeSong) return \"\"; // Return an empty string if no active song\n      let result = `Title: ${this.activeSong.title}\\n`; // Add the song title\n      result += `Mood: ${this.activeSong.mood}\\n`; // Add the song mood\n      result += `Theme: ${this.activeSong.theme}\\n`; // Add the song theme\n      result += `Hook: ${this.activeSong.hook}\\n\\n`; // Add the song hook\n      result += `Key: ${this.activeSong.key}\\n`; // Add the song key\n      result += `Scale: ${this.activeSong.scale}\\n\\n`; // Add the song scale\n      this.activeSong.sections.forEach((section) => {\n        // Iterate over each section of the song\n        result += `${section.type.toUpperCase()} - ${\n          section.chordProgression\n        }\\n\\n`; // Add the section type and chord progression\n        section.lines.forEach((line) => {\n          // Iterate over each line in the section\n          result += `${line}\\n\\n`; // Add the line\n        });\n        result += `\\n`; // Add a newline after each section\n      });\n      return result; // Return the formatted song string\n    },\n  },\n  methods: {\n    copyToClipboard() {\n      // Copy the formatted song to the clipboard\n      const el = document.createElement(\"textarea\"); // Create a temporary textarea element\n      el.value = this.formattedSong; // Set its value to the formatted song\n      document.body.appendChild(el); // Append the textarea to the document body\n      el.select(); // Select the textarea content\n      document.execCommand(\"copy\"); // Execute the copy command\n      document.body.removeChild(el); // Remove the textarea from the document body\n    },\n  },\n};\n</script>\n","import { render } from \"./PlainTextLayout.vue?vue&type=template&id=767ec51e\"\nimport script from \"./PlainTextLayout.vue?vue&type=script&lang=js\"\nexport * from \"./PlainTextLayout.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"card bg-card text-dark-muted mb-3 shadow-sm\">\n    <div class=\"card-body\">\n      <div class=\"d-flex justify-content-between\">\n        <h1 class=\"fs-4 my-auto fw-bold text-start\">Song</h1>\n        <button\n          class=\"btn btn-sm fw-bold mx-1\"\n          :class=\"getUnsavedChanges ? 'btn-primary' : 'btn-outline-primary'\"\n          @click=\"saveActiveSongToStore\"\n        >\n          Save All\n        </button>\n      </div>\n      <hr />\n      <div v-if=\"activeSong && activeSong.id\">\n        <div class=\"text-start\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <!-- Title Field -->\n              <div class=\"mb-3\">\n                <label for=\"songTitle\" class=\"form-label fw-bold\">Title</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control input-off-white\"\n                  id=\"songTitle\"\n                  v-model=\"activeSong.title\"\n                  @blur=\"manualSaveState\"\n                />\n              </div>\n            </div>\n            <div class=\"col\">\n              <!-- Mood Field -->\n              <div class=\"mb-3\">\n                <label for=\"songMood\" class=\"form-label fw-bold\">Mood</label>\n                <select\n                  class=\"form-select input-off-white\"\n                  id=\"songMood\"\n                  v-model=\"activeSong.mood\"\n                  @change=\"manualSaveState\"\n                >\n                  <option value=\"\" disabled>Select a mood</option>\n                  <option\n                    v-for=\"mood in getMoods\"\n                    :key=\"mood.mood\"\n                    :value=\"mood.mood\"\n                  >\n                    {{ mood.mood }}\n                  </option>\n                </select>\n                <!-- The little caption -->\n                <small\n                  v-if=\"selectedMoodImplication\"\n                  class=\"text-muted ms-2 mb-0\"\n                >\n                  Musical Implication: {{ selectedMoodImplication }}\n                </small>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"mb-3\">\n                <!-- Key Field -->\n                <label for=\"songKey\" class=\"form-label fw-bold\">Key</label>\n                <select\n                  class=\"form-select input-off-white\"\n                  id=\"songKey\"\n                  v-model=\"activeSong.key\"\n                  @change=\"manualSaveState\"\n                >\n                  <option value=\"\" disabled>Select a key</option>\n                  <option v-for=\"key in getKeys\" :key=\"key\" :value=\"key\">\n                    {{ key }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"mb-3\">\n                <!-- Scale Field -->\n                <label for=\"songScale\" class=\"form-label fw-bold\"\n                  >Scale/Mode</label\n                >\n                <select\n                  class=\"form-select input-off-white\"\n                  id=\"songScale\"\n                  v-model=\"activeSong.scale\"\n                  @change=\"manualSaveState\"\n                >\n                  <option value=\"\" disabled>Select a scale or mode</option>\n                  <option\n                    v-for=\"scale in getScales\"\n                    :key=\"scale.name\"\n                    :value=\"scale.name\"\n                  >\n                    {{ scale.name }} - {{ scale.emotionalQuality }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <!-- Pop up Interval Chart -->\n          <ChordTable />\n          <div class=\"mb-3\">\n            <!-- Theme Field -->\n            <label for=\"songTheme\" class=\"form-label fw-bold\">Theme</label>\n            <input\n              type=\"text\"\n              class=\"form-control input-off-white mb-2\"\n              v-model=\"activeSong.theme\"\n              @blur=\"manualSaveState\"\n            />\n            <div class=\"d-flex align-items-center\">\n              <select\n                class=\"form-select input-off-white me-2\"\n                id=\"songTheme\"\n                v-model=\"selectedTheme\"\n                @blur=\"manualSaveState\"\n                @change=\"handleThemeChange\"\n              >\n                <option value=\"\" disabled>\n                  Write Your Own or Select a Prompt\n                </option>\n                <option\n                  v-for=\"prompt in getPrompts\"\n                  :key=\"prompt\"\n                  :value=\"prompt\"\n                >\n                  {{ prompt }}\n                </option>\n              </select>\n              <button\n                class=\"btn btn-outline-custom btn-sm fw-bold w-50\"\n                @click=\"selectRandomPrompt\"\n              >\n                Select Random Prompt\n              </button>\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <!-- Hook Field -->\n            <label for=\"songHook\" class=\"form-label fw-bold\">Hook</label>\n            <input\n              type=\"text\"\n              class=\"form-control input-off-white\"\n              id=\"songHook\"\n              v-model=\"activeSong.hook\"\n              placeholder=\"Catchy phrase or refrain\"\n              @blur=\"manualSaveState\"\n            />\n          </div>\n          <div class=\"mb-3\">\n            <!-- Narrative Outline Field -->\n            <label for=\"songNarrative\" class=\"form-label fw-bold\"\n              >Narrative Outline</label\n            >\n            <textarea\n              class=\"form-control input-off-white\"\n              id=\"songNarrative\"\n              rows=\"3\"\n              v-model=\"activeSong.narrativeOutline\"\n              placeholder=\"Narrative plot points for each section\"\n              @input=\"autoResize\"\n              @blur=\"manualSaveState\"\n              ref=\"narrativeTextarea\"\n            ></textarea>\n          </div>\n        </div>\n        <!-- Add ChromeMusicLab component here -->\n        <ChromeMusicLab :song=\"activeSong\" />\n        <div class=\"mb-3\">\n          <!-- Lyrical Arrangement Panel -->\n          <div class=\"card bg-card shadow-sm\">\n            <div class=\"card-body\">\n              <div class=\"text-start text-dark-muted\">\n                <label for=\"templateDropdown\" class=\"form-label fw-bold\"\n                  >Lyrical Arrangement Template</label\n                >\n              </div>\n              <div v-if=\"selectedTemplate\" class=\"mb-3 text-start\">\n                <span\n                  v-html=\"arrangementVisualized(selectedTemplateArrangement)\"\n                ></span>\n              </div>\n              <select\n                class=\"form-select\"\n                id=\"templateDropdown\"\n                v-model=\"selectedTemplate\"\n                @change=\"manualSaveState\"\n              >\n                <option value=\"\" disabled>Select a template</option>\n                <option\n                  v-for=\"template in getSectionTemplates\"\n                  :key=\"template.name\"\n                  :value=\"template.name\"\n                >\n                  {{ template.name }} -\n                  {{ arrangementText(template.arrangement) }}\n                </option>\n              </select>\n              <button\n                class=\"btn btn-outline-custom btn-sm fw-bold mt-2\"\n                @click=\"confirmApplyTemplate\"\n              >\n                Apply Template\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Song Section Section :) -->\n        <div v-for=\"(section, index) in orderedSections\" :key=\"section.id\">\n          <SongSection\n            :sectionId=\"section.id\"\n            :isFirst=\"index === 0\"\n            :isLast=\"index === orderedSections.length - 1\"\n          />\n        </div>\n        <!-- Bottom Button Group -->\n        <button\n          class=\"btn btn-outline-custom btn-sm fw-bold mx-1\"\n          @click=\"createSection('verse')\"\n        >\n          Add Verse\n        </button>\n        <button\n          class=\"btn btn-outline-custom btn-sm fw-bold mx-1\"\n          @click=\"createSection('chorus')\"\n        >\n          Add Chorus\n        </button>\n        <button\n          class=\"btn btn-outline-custom btn-sm fw-bold mx-1\"\n          @click=\"createSection('bridge')\"\n        >\n          Add Bridge\n        </button>\n        <button\n          class=\"btn btn-outline-custom btn-sm fw-bold mx-1\"\n          @click=\"activatePlainTextView\"\n        >\n          {{ plainTextActive ? \"Hide Plain Text\" : \"Show Plain Text\" }}\n        </button>\n\n        <button\n          class=\"btn btn-sm fw-bold mx-1\"\n          :class=\"getUnsavedChanges ? 'btn-primary' : 'btn-outline-primary'\"\n          @click=\"saveActiveSongToStore\"\n        >\n          Save All\n        </button>\n      </div>\n      <div v-else>\n        <p class=\"text-center text-muted\">No song selected.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SongSection from \"@/components/SongSection.vue\";\nimport ChromeMusicLab from \"@/components/ChromeMusicLab.vue\"; // Import ChromeMusicLab\nimport ChordTable from \"@/components/ChordTable.vue\"; // Import ChordTable\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"SongComplete\",\n  components: {\n    SongSection,\n    ChromeMusicLab,\n    ChordTable,\n  },\n  props: {\n    plainTextActive: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      selectedTemplate: \"\", // Add selectedTemplate to data\n      romanNumerals: [\"I\", \"ii\", \"iii\", \"IV\", \"V\", \"vi\", \"vii°\"], // Roman numerals for chords\n      selectedTheme: \"\", // Add selectedTheme to data\n      customString: \"Write your own custom theme\", // Custom string for theme\n    };\n  },\n  computed: {\n    ...mapGetters([\n      \"getActiveSong\", // Current active song - not to be confused with the song object in the songs array.\n      \"getSectionTemplates\", // Data file containing section templates\n      \"getMoods\", // Data file containing moods\n      \"getKeys\", // Data file containing keys\n      \"getScales\", // Data file containing scales\n      \"getPrompts\", // Data file containing prompts\n      \"getChordProgressions\", // Data file containing chord progressions\n      \"getSelectedScaleNotes\", // Getter for selected scale notes\n      \"getSelectedScaleChords\", // Getter for selected scale chords\n      \"getUnsavedChanges\", // Getter for unsaved changes - used to toggle the Save All button\n    ]),\n    activeSong() {\n      return this.getActiveSong;\n    },\n\n    orderedSections() {\n      // This is something leftover from a failed function. I don't know if it's needed, but it works with it there.\n      // Order sections by their order property\n      return (this.activeSong?.sections || [])\n        .slice()\n        .sort((a, b) => a.order[0] - b.order[0]);\n    },\n    selectedTemplateArrangement() {\n      // Finds the selected template and returns the arrangement\n      const template = this.getSectionTemplates.find(\n        (t) => t.name === this.selectedTemplate\n      );\n      return template ? template.arrangement : [];\n    },\n    selectedMoodImplication() {\n      // Finds the selected mood and returns the implications\n      const mood = this.getMoods.find((m) => m.mood === this.activeSong?.mood);\n      return mood ? mood.implications : \"\";\n    },\n    selectedKey() {\n      // Returns the selected key - used to update chord progressions\n      return this.activeSong?.key;\n    },\n    selectedScale() {\n      // Returns the selected scale - used to update chord progressions\n      return this.getScales.find((s) => s.name === this.activeSong?.scale);\n    },\n    selectedScaleNotes() {\n      // Returns the selected scale notes - used to display the interval chart\n      return this.getSelectedScaleNotes;\n    },\n    selectedScaleChords() {\n      // Returns the selected scale chords - used to display the interval chart\n      return this.getSelectedScaleChords;\n    },\n  },\n  watch: {\n    activeSong: {\n      // Watch for changes in the active song\n      handler(newSong) {\n        if (newSong) {\n          this.selectedTheme = newSong.theme || \"\";\n          this.$nextTick(() => {\n            this.autoResize({ target: this.$refs.narrativeTextarea });\n          });\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n    selectedKey() {\n      // Watch for changes in the selected key and update chord progressions\n      this.updateChordProgressions();\n    },\n    selectedScale() {\n      // Watch for changes in the selected scale and update chord progressions\n      this.updateChordProgressions();\n    },\n  },\n  methods: {\n    ...mapActions([\n      \"updateSong\",\n      \"saveStateToLocalStorage\",\n      \"addActiveSongSection\",\n      \"deleteActiveSongSection\",\n      \"updateActiveSongLine\",\n      \"updateChordProgressions\",\n      \"saveActiveSong\",\n      \"setUnsavedChanges\",\n      \"setActiveSong\", // Add setActiveSong to mapActions\n    ]),\n    manualSaveState() {\n      if (this.activeSong) {\n        this.updateSong(this.activeSong);\n      }\n      this.saveStateToLocalStorage();\n    },\n    arrangementVisualized(arrangement) {\n      // These are the little colored badges that show up in the template dropdown\n      // Visualize the arrangement of a template with color-coded badges\n      return arrangement\n        .map((section) => {\n          switch (section) {\n            case \"v\":\n              return '<span class=\"badge bg-primary me-1\">Verse</span>';\n            case \"c\":\n              return '<span class=\"badge bg-success me-1\">Chorus</span>';\n            case \"b\":\n              return '<span class=\"badge bg-danger me-1\">Bridge</span>';\n            default:\n              return \"\";\n          }\n        })\n        .join(\"\");\n    },\n    arrangementText(arrangement) {\n      // This is the text that shows up in the template dropdown\n      // Convert the arrangement to a text representation\n      return arrangement\n        .map((section) => {\n          switch (section) {\n            case \"v\":\n              return \"Verse\";\n            case \"c\":\n              return \"Chorus\";\n            case \"b\":\n              return \"Bridge\";\n            default:\n              return \"\";\n          }\n        })\n        .join(\" - \");\n    },\n    confirmApplyTemplate() {\n      // Since applying a template can be destructive, we want to confirm the user's intent\n      if (\n        confirm(\n          \"Are you sure you want to apply this template? This will clear all existing sections.\"\n        )\n      ) {\n        this.applyTemplate();\n      }\n    },\n    applyTemplate() {\n      const template = this.getSectionTemplates.find(\n        (t) => t.name === this.selectedTemplate\n      );\n      if (!template) {\n        console.error(\"Template not found\");\n        return;\n      }\n      const sections = template.arrangement.map((type, index) => {\n        let sectionType;\n        if (type === \"v\") {\n          sectionType = \"Verse\";\n        } else if (type === \"c\") {\n          sectionType = \"Chorus\";\n        } else {\n          sectionType = \"Bridge\";\n        }\n        return {\n          id: new Date().getTime() + index,\n          order: [index],\n          type: sectionType,\n          lines: [\"\", \"\", \"\", \"\"],\n          sectionNarrative: \"\",\n          chordProgression: \"\",\n          selectedChordProgression: \"\",\n          brainstormingText: \"\",\n          isMinimized: true, // Ensure new sections start minimized\n        };\n      });\n      this.setActiveSong({\n        ...this.activeSong,\n        sections,\n      });\n      this.saveStateToLocalStorage();\n    },\n    createSection(type) {\n      // This is the Section Constructor\n      const newSection = {\n        id: new Date().getTime(),\n        order: [this.activeSong.sections.length],\n        type: this.sectionLabel(type),\n        lines: [\"\", \"\", \"\", \"\"],\n        sectionNarrative: \"\",\n        brainstormingText: \"\",\n        chordProgression: \"\",\n        selectedChordProgression: \"\",\n      };\n      this.addActiveSongSection(newSection);\n    },\n    removeSection(sectionId) {\n      // This is the Section Destructor\n      this.deleteActiveSongSection(sectionId);\n    },\n    moveSection(index, direction) {\n      // This is the Section Mover, allowing the user reorder sections within the song.\n      console.log(\"moveSection called\");\n      console.log(index, direction);\n      if (direction === \"up\" && index > 0) {\n        // Swap the current section with the previous section if not at the top\n        const temp = this.activeSong.sections[index];\n        this.activeSong.sections[index] = this.activeSong.sections[index - 1];\n        this.activeSong.sections[index - 1] = temp;\n      } else if (\n        direction === \"down\" &&\n        index < this.activeSong.sections.length - 1\n      ) {\n        // Swap the current section with the next section if not at the bottom\n        const temp = this.activeSong.sections[index];\n        this.activeSong.sections[index] = this.activeSong.sections[index + 1];\n        this.activeSong.sections[index + 1] = temp;\n      }\n      // Update the order property of each section\n      this.activeSong.sections.forEach((section, idx) => {\n        section.order = [idx];\n      });\n      this.updateSong(this.activeSong); // Trigger Vuex store update\n    },\n    activatePlainTextView() {\n      // This toggles the plain text view, or printable tab.\n      // Emit an event to toggle the plain text view\n      this.$emit(\"toggle-plain-text\");\n    },\n    badgeClass(section) {\n      // This function returns the appropriate badge class based on the section type\n      // Return the appropriate badge class based on the section type\n      switch (section) {\n        case \"v\":\n          return \"bg-primary\";\n        case \"c\":\n          return \"bg-success\";\n        case \"b\":\n          return \"bg-warning\";\n        default:\n          return \"bg-secondary\";\n      }\n    },\n    sectionLabel(section) {\n      // This function returns the appropriate label based on the section type\n      // Return the appropriate label based on the section type\n      switch (section) {\n        case \"verse\":\n          return \"Verse\";\n        case \"chorus\":\n          return \"Chorus\";\n        case \"bridge\":\n          return \"Bridge\";\n        default:\n          return \"Unknown\";\n      }\n    },\n    autoResize(event) {\n      // This function automatically resizes the textarea based on the content in the Narrative Outline field\n      const textarea = event.target;\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    },\n    handleThemeChange() {\n      // This function handles the theme change so the user can hit the random selection button indefinitely.\n      if (this.selectedTheme !== this.customString) {\n        this.activeSong.theme = this.selectedTheme;\n      } else {\n        this.activeSong.theme = \"\";\n      }\n      this.manualSaveState();\n    },\n    selectRandomPrompt() {\n      // Shuffle the prompts and select a random one\n      const randomIndex = Math.floor(Math.random() * this.getPrompts.length);\n      this.selectedTheme = this.getPrompts[randomIndex];\n      this.activeSong.theme = this.selectedTheme;\n      this.manualSaveState();\n    },\n    saveActiveSongToStore() {\n      // This function saves the active song to the store for the conditional button at the bottom\n      this.saveActiveSong();\n      this.saveStateToLocalStorage();\n      this.setUnsavedChanges(false);\n    },\n  },\n};\n</script>\n","<template>\n  <div class=\"card mb-3 shadow-sm bg-card\">\n    <div\n      class=\"card-body bg-section-card rounded\"\n      :class=\"{ 'pt-1': !isMinimized }\"\n    >\n      <div class=\"row\">\n        <div class=\"col\">\n          <!-- Header/Link/Timer/Control Bar at the top of each section -->\n          <div\n            class=\"d-flex justify-content-between align-items-center text-dark-muted\"\n          >\n            <div class=\"ms-2 fs-5 fw-bold text-capitalize\">\n              <button\n                class=\"btn btn-outline-custom btn-sm py-0 me-2\"\n                @click=\"isMinimized = !isMinimized\"\n                :title=\"isMinimized ? 'Maximize' : 'Minimize'\"\n              >\n                <span\n                  :class=\"\n                    isMinimized\n                      ? 'bi bi-arrows-angle-expand'\n                      : 'bi bi-arrows-angle-contract'\n                  \"\n                ></span>\n              </button>\n              {{ section.type }}\n            </div>\n\n            <CountdownTimer\n              class=\"ms-auto me-2 text-dark-muted\"\n              v-if=\"!isMinimized\"\n            />\n\n            <div>\n              <button\n                class=\"btn btn-outline-custom fw-bold btn-sm py-0 me-2\"\n                @click=\"confirmRemoveSelf\"\n              >\n                <span class=\"bi bi-trash-fill\"></span>\n              </button>\n              <div class=\"btn-group gap-1\">\n                <button\n                  class=\"btn btn-outline-custom fw-bold py-0\"\n                  @click=\"moveSelf('up')\"\n                  :disabled=\"isFirst\"\n                >\n                  ↑\n                </button>\n                <button\n                  class=\"btn btn-outline-custom fw-bold py-0\"\n                  @click=\"moveSelf('down')\"\n                  :disabled=\"isLast\"\n                >\n                  ↓\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr class=\"mt-1 mb-3\" v-if=\"!isMinimized\" />\n      <div class=\"row\" v-if=\"!isMinimized\">\n        <!-- Right Column -->\n        <div class=\"col-12 col-md-4 order-1 order-md-2 mb-2 mb-md-0\">\n          <RhymeThesaurusPanel />\n          <textarea\n            class=\"form-control input-off-white\"\n            rows=\"10\"\n            placeholder=\"Brainstorming area...\"\n            v-model=\"brainstormingText\"\n            @blur=\"saveModifiedSectionToActiveSongInVuex\"\n            @input=\"setUnsavedChanges(true)\"\n          ></textarea>\n        </div>\n\n        <!-- Left Column - They are switched to stack properly -->\n        <div class=\"col-12 col-md-8 order-2 order-md-1\">\n          <!-- Section Narrative Field -->\n          <input\n            type=\"text\"\n            class=\"form-control mb-2 input-off-white\"\n            v-model=\"sectionNarrative\"\n            placeholder=\"This section is about...\"\n            @blur=\"saveModifiedSectionToActiveSongInVuex\"\n            @input=\"setUnsavedChanges(true)\"\n          />\n          <!-- Chord Progression section -->\n          <div class=\"input-group mb-2\">\n            <input\n              type=\"text\"\n              class=\"form-control input-off-white\"\n              v-model=\"chordProgression\"\n              placeholder=\"Chord progression (e.g., C G Am F)\"\n              @blur=\"saveModifiedSectionToActiveSongInVuex\"\n              @input=\"setUnsavedChanges(true)\"\n            />\n            <select\n              class=\"form-select input-off-white\"\n              v-if=\"availableProgressions.length\"\n              v-model=\"selectedProgression\"\n              @change=\"applyChordProgression\"\n            >\n              <option value=\"\" disabled>Select a chord progression</option>\n              <option value=\"custom\">Custom Progression</option>\n              <option\n                v-for=\"progression in availableProgressions\"\n                :key=\"progression['Chord Progression']\"\n                :value=\"progression['Chord Progression']\"\n              >\n                {{ progression[\"Chord Progression\"] }} -\n                {{ progression[\"Emotional Quality\"] }}\n              </option>\n            </select>\n          </div>\n          <hr />\n          <!-- All the lines -->\n          <div\n            v-for=\"(line, index) in section.lines\"\n            :key=\"index\"\n            class=\"mb-2 d-flex align-items-center\"\n          >\n            <input\n              type=\"text\"\n              class=\"form-control input-off-white\"\n              v-model=\"localLines[index]\"\n              @blur=\"updateLine(index, localLines[index])\"\n              @input=\"setUnsavedChanges(true)\"\n              :placeholder=\"`Line ${index + 1}`\"\n            />\n            <!-- Line Movement Controls -->\n            <div class=\"btn-group ms-2 gap-1\">\n              <button\n                class=\"btn btn-outline-custom btn-sm h-100 my-0\"\n                @click=\"\n                  moveLine(index, 'up');\n                  setUnsavedChanges(true);\n                \"\n                :disabled=\"index === 0\"\n              >\n                ↑\n              </button>\n              <button\n                class=\"btn btn-outline-custom btn-sm h-100 my-0\"\n                @click=\"\n                  moveLine(index, 'down');\n                  setUnsavedChanges(true);\n                \"\n                :disabled=\"index === localLines.length - 1\"\n              >\n                ↓\n              </button>\n            </div>\n          </div>\n          <!-- Add/Remove Line Buttons -->\n          <button\n            class=\"btn btn-outline-round mx-1\"\n            @click=\"removeLine\"\n            :disabled=\"localLines.length <= 1\"\n          >\n            <span class=\"fw-bold bi bi-dash-lg\"></span>\n          </button>\n          <button class=\"btn btn-outline-round mx-1\" @click=\"addLine\">\n            <span class=\"bi bi-plus-lg\"></span>\n          </button>\n        </div>\n      </div>\n      <div v-if=\"!isMinimized\">\n        <a\n          class=\"btn btn-outline-custom btn-sm py-0 me-2\"\n          href=\"https://hookpad.hooktheory.com/\"\n          target=\"_blank\"\n          title=\"Open\n          Hookpad by Hooktheory in a new tab\"\n        >\n          <span class=\"bi bi-box-arrow-up-right\">\n            <span class=\"ms-2\">Hookpad</span></span\n          >\n        </a>\n        <!-- Manual Save Button -->\n        <button\n          class=\"btn btn-sm py-0 me-2\"\n          :class=\"getUnsavedChanges ? 'btn-danger' : 'btn-outline-custom'\"\n          @click=\"saveModifiedSectionToActiveSongInVuex\"\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CountdownTimer from \"@/components/CountdownTimer.vue\"; // Import CountdownTimer component for the headers of each section\nimport RhymeThesaurusPanel from \"@/components/RhymeThesaurusPanel.vue\"; // Import RhymeThesaurusPanel component for the right column of each section. API calls are made to the RhymeBrain API to get rhymes and synonyms for the brainstorming text.\n\nimport { mapActions, mapGetters } from \"vuex\";\n\nexport default {\n  props: {\n    sectionId: {\n      type: Number,\n      required: true,\n    },\n    isFirst: {\n      type: Boolean,\n      default: false,\n    },\n    isLast: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  components: {\n    CountdownTimer,\n    RhymeThesaurusPanel,\n  },\n  data() {\n    return {\n      localLines: [], // Local copy of the lines\n      sectionNarrative: \"\", // Local copy of section narrative\n      chordProgression: \"\", // Local copy of chord progression\n      brainstormingText: \"\", // Local copy of brainstorming text\n      selectedProgression: \"\", // Add selectedProgression to data\n      isCustomProgression: false, // Track if the progression is custom\n      isMinimized: true, // Track if the section is minimized\n    };\n  },\n  computed: {\n    ...mapGetters({\n      activeSong: \"getActiveSong\",\n      getUnsavedChanges: \"getUnsavedChanges\",\n      availableProgressions: \"getAvailableProgressions\",\n    }),\n    section() {\n      return this.activeSong?.sections.find((sec) => sec.id === this.sectionId);\n    },\n  },\n  methods: {\n    ...mapActions([\n      \"updateActiveSongSection\", // Updates a section in the activeSong\n      \"moveActiveSongSection\", // Moves a section up or down within the activeSong\n      \"deleteActiveSongSection\", // Deletes a section from the activeSong\n      \"updateActiveSongLine\", // Updates a line in the activeSong\n      \"setUnsavedChanges\", // Lets the app know there are unsaved changes\n      \"addActiveSongLine\", // Adds a new line to the activeSong\n      \"deleteActiveSongLine\",\n    ]),\n    moveLine(index, direction) {\n      // Move a line up or down within the section\n      if (direction === \"up\" && index > 0) {\n        // Swap the current line with the previous line if not at the top\n        [this.localLines[index - 1], this.localLines[index]] = [\n          this.localLines[index],\n          this.localLines[index - 1],\n        ];\n      } else if (direction === \"down\" && index < this.localLines.length - 1) {\n        // Swap the current line with the next line if not at the bottom\n        [this.localLines[index + 1], this.localLines[index]] = [\n          this.localLines[index],\n          this.localLines[index + 1],\n        ];\n      }\n    },\n    confirmRemoveSelf() {\n      // Destrcutive action, confirm before removing\n      if (confirm(\"Are you sure you want to remove this section?\")) {\n        this.removeSelf();\n      }\n    },\n    removeSelf() {\n      // Remove the section from the activeSong\n      // Delete the section from the active song\n      this.deleteActiveSongSection(this.section.id);\n    },\n    addLine() {\n      // Add a new line to the section\n      this.addActiveSongLine({\n        sectionId: this.section.id,\n        newLine: \"\",\n      });\n    },\n    removeLine() {\n      // Remove the last line from the section if there is more than one line\n      if (this.localLines.length > 1) {\n        this.deleteActiveSongLine({\n          sectionId: this.section.id,\n          lineIndex: this.localLines.length - 1,\n        });\n      }\n    },\n    moveSelf(direction) {\n      // Move the section up or down within the activeSong\n      this.$emit(\"move-section\", direction);\n      console.log(\"moveSelf emitted\");\n    },\n    saveModifiedSectionToActiveSongInVuex() {\n      // Save the modified section to the activeSong in Vuex\n      const updatedSection = {\n        ...this.section,\n        lines: this.localLines,\n        sectionNarrative: this.sectionNarrative,\n        chordProgression: this.chordProgression,\n        selectedProgression: this.selectedProgression,\n        brainstormingText: this.brainstormingText,\n        isMinimized: this.isMinimized, // Include isMinimized\n      };\n      this.updateActiveSongSection(updatedSection);\n      this.setUnsavedChanges(false);\n    },\n    applyChordProgression() {\n      // Apply the selected chord progression to the section - Converts interval Roman numerals to chords\n      if (this.selectedProgression === \"custom\") {\n        this.isCustomProgression = true;\n        return;\n      }\n      this.isCustomProgression = false;\n      if (this.$parent.selectedKey && this.$parent.selectedScale) {\n        const key = this.$parent.selectedKey;\n        const scale = this.$parent.selectedScale;\n        const notes = scale.notes(key);\n        const chordMap = {\n          I: notes[0],\n          \"i°\": notes[0] + \"°\",\n          II: notes[1],\n          ii: notes[1] + \"m\",\n          \"ii°\": notes[1] + \"°\",\n          iii: notes[2] + \"m\",\n          \"III+\": notes[2] + \"+\",\n          IV: notes[3],\n          \"iv°\": notes[3] + \"°\",\n          V: notes[4],\n          \"v°\": notes[4] + \"°\",\n          vi: notes[5] + \"m\",\n          \"vii°\": notes[6] + \"°\",\n          i: notes[0] + \"m\",\n          III: notes[2],\n          iv: notes[3] + \"m\",\n          v: notes[4] + \"m\",\n          VI: notes[5],\n          VII: notes[6],\n        };\n\n        this.chordProgression = this.selectedProgression\n          .split(\" - \")\n          .map((roman) => chordMap[roman] || roman)\n          .join(\" - \");\n      } else {\n        this.chordProgression = this.selectedProgression;\n      }\n    },\n    updateLine(index, newLine) {\n      // Update a line in the section\n      this.updateActiveSongLine({\n        sectionId: this.section.id,\n        lineIndex: index,\n        newLine,\n      });\n    },\n  },\n  watch: {\n    isMinimized() {\n      this.saveModifiedSectionToActiveSongInVuex();\n    },\n    section: {\n      handler(newSection) {\n        if (newSection) {\n          this.localLines = [...newSection.lines];\n          this.sectionNarrative = newSection.sectionNarrative || \"\";\n          this.chordProgression = newSection.chordProgression || \"\";\n          this.brainstormingText = newSection.brainstormingText || \"\";\n          this.selectedProgression = newSection.selectedProgression || \"\";\n          this.isMinimized = newSection.isMinimized || false; // Load isMinimized\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n    // watch for changes in this.activeSong.key and this.activeSong.scale, and update the chord progression with applyChordProgression\n    activeSong: {\n      handler() {\n        this.applyChordProgression();\n      },\n      immediate: true,\n    },\n  },\n};\n</script>\n","<template>\n  <div class=\"d-flex align-items-center justify-content-between\">\n    <div class=\"flex-grow-1 text-center\">\n      <p\n        v-if=\"timerEnded\"\n        class=\"alert alert-danger my-1 fw-bold mx-3 py-0 text-nowrap\"\n      >\n        Time's up!\n      </p>\n      <div v-else class=\"fw-bold fs-4 me-3 my-0\">{{ formattedTime }}</div>\n    </div>\n    <div class=\"btn-group gap-1 w-100\" role=\"group\">\n      <button\n        class=\"btn btn-outline-custom fw-bold py-0\"\n        @click=\"decrementTime\"\n      >\n        -\n      </button>\n      <button\n        class=\"btn btn-outline-custom fw-bold py-0\"\n        @click=\"incrementTime\"\n      >\n        +\n      </button>\n      <button class=\"btn btn-outline-custom fw-bold py-0\" @click=\"resetTime\">\n        Reset\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CountdownTimer\",\n  data() {\n    return {\n      minutes: 0, // Minutes part of the timer\n      seconds: 0, // Seconds part of the timer\n      timer: null, // Reference to the setInterval timer\n      timerEnded: false, // Flag to indicate if the timer has ended\n      audio: new Audio(require(\"@/assets/alarm.mp3\")), // Audio object for the alarm sound\n    };\n  },\n  computed: {\n    formattedTime() {\n      // Format the time as MM:SS\n      const minutes = this.minutes;\n      const seconds = this.seconds < 10 ? \"0\" + this.seconds : this.seconds;\n      return `${minutes}:${seconds}`;\n    },\n  },\n  methods: {\n    startTimer() {\n      // Start the countdown timer\n      if (this.timer) return; // If the timer is already running, do nothing\n      this.timer = setInterval(() => {\n        if (this.seconds === 0) {\n          if (this.minutes === 0) {\n            // If both minutes and seconds are zero, stop the timer\n            clearInterval(this.timer);\n            this.timer = null;\n            this.timerEnded = true; // Set the timerEnded flag to true\n            this.audio.play(); // Play the alarm sound\n            setTimeout(() => {\n              this.timerEnded = false; // Reset the timerEnded flag after 3 seconds\n            }, 3000);\n          } else {\n            // If minutes are not zero, decrement minutes and reset seconds to 59\n            this.minutes--;\n            this.seconds = 59;\n          }\n        } else {\n          // If seconds are not zero, decrement seconds\n          this.seconds--;\n        }\n      }, 1000); // Run the interval every 1 second\n    },\n    incrementTime() {\n      // Increment the minutes and start the timer\n      this.minutes++;\n      this.startTimer();\n    },\n    decrementTime() {\n      // Decrement the minutes if greater than zero\n      if (this.minutes > 0) {\n        this.minutes--;\n      }\n    },\n    resetTime() {\n      // Reset the timer to 0 minutes and 0 seconds\n      this.minutes = 0;\n      this.seconds = 0;\n      clearInterval(this.timer); // Clear the interval timer\n      this.timer = null;\n      this.timerEnded = false; // Reset the timerEnded flag\n    },\n  },\n};\n</script>\n","import { render } from \"./CountdownTimer.vue?vue&type=template&id=66158f64\"\nimport script from \"./CountdownTimer.vue?vue&type=script&lang=js\"\nexport * from \"./CountdownTimer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"input-group mb-2\">\n      <input\n        type=\"text\"\n        class=\"form-control input-off-white\"\n        placeholder=\"Word helper...\"\n        v-model=\"sanitizedRhymeQuery\"\n        @keyup.enter=\"fetchRhymesAndSynonyms\"\n      />\n      <button class=\"btn btn-outline-custom\" @click=\"fetchRhymesAndSynonyms\">\n        <span class=\"bi bi-search\"></span>\n      </button>\n    </div>\n    <div\n      v-if=\"loading\"\n      class=\"mt-2 alert alert-info position-relative\"\n      style=\"max-height: 20em; overflow-y: auto\"\n    >\n      <p>Loading...</p>\n    </div>\n    <div\n      v-if=\"\n        !loading && (rhymes.length || synonyms.length || rawDictionaryResults)\n      \"\n      class=\"mt-2 alert alert-info position-relative\"\n      style=\"max-height: 20em; overflow-y: auto\"\n    >\n      <button\n        type=\"button\"\n        class=\"btn-close position-absolute top-0 end-0 m-2\"\n        aria-label=\"Close\"\n        @click=\"clearResults\"\n      ></button>\n      <div v-if=\"rawDictionaryResults && rawDictionaryResults.length\">\n        <p class=\"section-heading fs-5\">Definition:</p>\n        <ul class=\"list-unstyled text-start\">\n          <li v-for=\"(entry, index) in rawDictionaryResults\" :key=\"index\">\n            <strong>{{ entry.hwi.hw }}</strong> ({{ entry.fl }})\n            <ul>\n              <li v-for=\"(def, defIndex) in entry.shortdef\" :key=\"defIndex\">\n                {{ def }}\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div v-if=\"rhymes.length\">\n        <p class=\"section-heading fs-5\">Rhymes:</p>\n        <div>\n          <p class=\"section-heading fs-6\">1 Syllable Rhymes:</p>\n          <ul class=\"list-unstyled text-start\">\n            <li v-for=\"(rhyme, index) in oneSyllableRhymes\" :key=\"index\">\n              {{ rhyme.word }}\n            </li>\n          </ul>\n        </div>\n        <div>\n          <p class=\"section-heading fs-6\">2 Syllable Rhymes:</p>\n          <ul class=\"list-unstyled text-start\">\n            <li v-for=\"(rhyme, index) in twoSyllableRhymes\" :key=\"index\">\n              {{ rhyme.word }}\n            </li>\n          </ul>\n        </div>\n        <div>\n          <p class=\"section-heading fs-6\">3+ Syllable Rhymes:</p>\n          <ul class=\"list-unstyled text-start\">\n            <li v-for=\"(rhyme, index) in threePlusSyllableRhymes\" :key=\"index\">\n              {{ rhyme.word }}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div v-if=\"synonyms.length\">\n        <p class=\"section-heading fs-5\">Synonyms:</p>\n        <ul class=\"list-unstyled text-start\">\n          <li v-for=\"(synonym, index) in synonyms.slice(0, 20)\" :key=\"index\">\n            {{ synonym }}\n          </li>\n        </ul>\n      </div>\n      <div v-if=\"idioms.length\">\n        <p class=\"section-heading fs-5\">Idioms:</p>\n        <ul class=\"list-unstyled text-start\">\n          <li v-for=\"(idiom, index) in idioms.slice(0, 20)\" :key=\"index\">\n            {{ idiom }}\n          </li>\n        </ul>\n      </div>\n      <div v-if=\"relatedWords.length\">\n        <p class=\"section-heading fs-5\">Related Words:</p>\n        <ul class=\"list-unstyled text-start\">\n          <li\n            v-for=\"(related, index) in relatedWords.slice(0, 20)\"\n            :key=\"index\"\n          >\n            {{ related }}\n          </li>\n        </ul>\n      </div>\n      <p class=\"section-heading fs-5\">API Attribution:</p>\n      <ul class=\"list-unstyled text-start\">\n        <li>\n          Rhyme results are provided by\n          <a href=\"https://rhymebrain.com\" target=\"_blank\">RhymeBrain.com</a>\n        </li>\n\n        <li>\n          Synonym results are provided by\n          <a href=\"https://dictionaryapi.com\" target=\"_blank\"\n            >Merriam-Webster Thesaurus</a\n          >\n        </li>\n\n        <li>\n          Dictionary results are provided by\n          <a href=\"https://dictionaryapi.com\" target=\"_blank\"\n            >Merriam-Webster Dictionary</a\n          >\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport DOMPurify from \"dompurify\";\n\nexport default {\n  data() {\n    return {\n      rhymeQuery: \"\",\n      rhymes: [],\n      synonyms: [],\n      idioms: [],\n      relatedWords: [],\n      rawThesaurusResults: null,\n      rawDictionaryResults: null,\n      loading: false,\n    };\n  },\n  computed: {\n    sanitizedRhymeQuery: {\n      get() {\n        return this.rhymeQuery;\n      },\n      set(value) {\n        this.rhymeQuery = DOMPurify.sanitize(value);\n      },\n    },\n    oneSyllableRhymes() {\n      return this.rhymes.filter((rhyme) => rhyme.syllables == 1).slice(0, 10);\n    },\n    twoSyllableRhymes() {\n      return this.rhymes.filter((rhyme) => rhyme.syllables == 2).slice(0, 10);\n    },\n    threePlusSyllableRhymes() {\n      return this.rhymes.filter((rhyme) => rhyme.syllables >= 3).slice(0, 5);\n    },\n  },\n  methods: {\n    async fetchRhymesAndSynonyms() {\n      if (this.rhymeQuery.trim() === \"\") {\n        this.rhymes = [];\n        this.synonyms = [];\n        this.idioms = [];\n        this.relatedWords = [];\n        this.rawThesaurusResults = null;\n        this.rawDictionaryResults = null;\n        return;\n      }\n      this.loading = true;\n      try {\n        const dictionaryResponse = await fetch(\n          `https://www.dictionaryapi.com/api/v3/references/collegiate/json/${this.rhymeQuery}?key=6515e3ae-2580-4db2-a88b-5c52e9444299`\n        );\n        const dictionaryData = await dictionaryResponse.json();\n        this.rawDictionaryResults = dictionaryData;\n\n        const synonymResponse = await fetch(\n          `https://www.dictionaryapi.com/api/v3/references/thesaurus/json/${this.rhymeQuery}?key=5530f2c7-3c20-4f89-8062-56afe1814600`\n        );\n        const synonymData = await synonymResponse.json();\n        if (synonymData.length > 0 && synonymData[0].meta) {\n          this.synonyms = synonymData[0].meta.syns.flat();\n          this.idioms = synonymData[0].meta.idioms\n            ? synonymData[0].meta.idioms.flat()\n            : [];\n          this.relatedWords = synonymData[0].meta.rel_list\n            ? synonymData[0].meta.rel_list.flat()\n            : [];\n        } else {\n          this.synonyms = [];\n          this.idioms = [];\n          this.relatedWords = [];\n        }\n        this.rawThesaurusResults = synonymData;\n\n        const rhymeResponse = await fetch(\n          `https://rhymebrain.com/talk?function=getRhymes&word=${this.rhymeQuery}`\n        );\n        const rhymeData = await rhymeResponse.json();\n        this.rhymes = rhymeData.map((word) => ({\n          word: word.word,\n          syllables: word.syllables,\n        }));\n\n        console.log(\"Rhymes fetched:\", this.rhymes);\n        console.log(\"Synonyms fetched:\", this.synonyms);\n        console.log(\"Idioms fetched:\", this.idioms);\n        console.log(\"Related words fetched:\", this.relatedWords);\n        console.log(\"Raw thesaurus results:\", this.rawThesaurusResults);\n        console.log(\"Raw dictionary results:\", this.rawDictionaryResults);\n      } catch (error) {\n        console.error(\n          \"Error fetching rhymes, synonyms, idioms, or dictionary data:\",\n          error\n        );\n      } finally {\n        this.loading = false;\n      }\n    },\n    clearResults() {\n      this.rhymes = [];\n      this.synonyms = [];\n      this.idioms = [];\n      this.relatedWords = [];\n      this.rawThesaurusResults = null;\n      this.rawDictionaryResults = null;\n    },\n  },\n};\n</script>\n<style scoped>\n.section-heading {\n  font-size: 1.5em;\n  font-weight: bold;\n  text-align: left;\n}\n</style>\n","import { render } from \"./RhymeThesaurusPanel.vue?vue&type=template&id=c4d36c26&scoped=true\"\nimport script from \"./RhymeThesaurusPanel.vue?vue&type=script&lang=js\"\nexport * from \"./RhymeThesaurusPanel.vue?vue&type=script&lang=js\"\n\nimport \"./RhymeThesaurusPanel.vue?vue&type=style&index=0&id=c4d36c26&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c4d36c26\"]])\n\nexport default __exports__","import { render } from \"./SongSection.vue?vue&type=template&id=1a6a1410\"\nimport script from \"./SongSection.vue?vue&type=script&lang=js\"\nexport * from \"./SongSection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"card bg-card mb-3 shadow-sm\" :class=\"{ minimized: isMinimized }\">\n    <div class=\"card-body\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <p class=\"text-start text-dark-muted fw-bold mb-3\">Chrome Music Lab</p>\n        <button\n          class=\"btn btn-outline-custom btn-sm fw-bold mb-3\"\n          @click=\"toggleMinimize\"\n          :class=\"isMinimized ? 'bi bi-chevron-down ' : 'bi bi-chevron-up'\"\n        >\n          {{ isMinimized ? \"Expand\" : \"Minimize\" }}\n        </button>\n      </div>\n      <div v-if=\"!isMinimized\">\n        <!-- Remove the iframe -->\n        <div class=\"mb-3\" style=\"height: 650px\">\n          <iframe\n            src=\"https://musiclab.chromeexperiments.com/\"\n            class=\"staff-iframe\"\n            frameborder=\"0\"\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MelodyManager\",\n  props: {\n    song: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isMinimized: true,\n      tempo: 120,\n      measureLength: 4,\n    };\n  },\n  methods: {\n    toggleMinimize() {\n      this.isMinimized = !this.isMinimized;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.staff-iframe {\n  width: 100%;\n  height: 100%; /* Adjust iframe height to fill the container */\n  border: none;\n}\n</style>\n","import { render } from \"./ChromeMusicLab.vue?vue&type=template&id=5e5d93a8&scoped=true\"\nimport script from \"./ChromeMusicLab.vue?vue&type=script&lang=js\"\nexport * from \"./ChromeMusicLab.vue?vue&type=script&lang=js\"\n\nimport \"./ChromeMusicLab.vue?vue&type=style&index=0&id=5e5d93a8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5e5d93a8\"]])\n\nexport default __exports__","<template>\n  <div v-if=\"selectedKey && selectedScale\" class=\"mb-3\">\n    <table\n      class=\"table table-bordered input-off-white text-dark-muted overflow-auto\"\n    >\n      <thead>\n        <tr>\n          <th>Diatonic Interval</th>\n          <th\n            v-for=\"(numeral, index) in adjustedRomanNumerals\"\n            :key=\"index\"\n            class=\"text-center\"\n            style=\"width: 14.28%\"\n          >\n            {{ numeral }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Note/Chord</td>\n          <td\n            v-for=\"(note, index) in adjustedScaleNotes\"\n            :key=\"index\"\n            class=\"text-center\"\n            style=\"width: 14.28%\"\n          >\n            {{ note }}{{ displayNotation(adjustedScaleChords[index]) }}\n          </td>\n        </tr>\n        <tr>\n          <td>Degree</td>\n          <td\n            v-for=\"(degree, index) in adjustedScaleChords\"\n            :key=\"index\"\n            class=\"text-center\"\n            style=\"width: 14.28%\"\n            :class=\"colorCoding(adjustedScaleChords[index])\"\n          >\n            {{ degree }}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Guitar Chords\n            <br />\n            <small>\n              <a\n                href=\"https://github.com/omnibrain/svguitar\"\n                class=\"btn btn-link btn-sm p-0\"\n                target=\"_blank\"\n              >\n                <i class=\"bi bi-info-circle\"></i>\n              </a>\n            </small>\n          </td>\n          <td\n            v-for=\"(chord, index) in adjustedScaleChords\"\n            :key=\"index\"\n            class=\"text-center\"\n            style=\"width: 14.28%\"\n          >\n            <div ref=\"chordContainer\" :id=\"'chord-' + index\"></div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { SVGuitarChord } from \"svguitar\";\nimport chordData from \"@/data/chords.json\";\n\nexport default {\n  name: \"ChordTable\",\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapGetters([\n      \"getSelectedScaleNotes\",\n      \"getSelectedScaleChords\",\n      \"getScales\",\n    ]),\n    selectedKey() {\n      return this.$store.getters.getActiveSong?.key;\n    },\n    selectedScale() {\n      return this.getScales?.find(\n        (s) => s.name === this.$store.getters.getActiveSong?.scale\n      );\n    },\n    selectedScaleNotes() {\n      return this.getSelectedScaleNotes;\n    },\n    selectedScaleChords() {\n      return this.getSelectedScaleChords;\n    },\n    adjustedScaleNotes() {\n      return this.isPentatonicScale\n        ? this.selectedScaleNotes.slice(0, 5)\n        : this.selectedScaleNotes.slice(0, 7);\n    },\n    adjustedScaleChords() {\n      return this.isPentatonicScale\n        ? this.selectedScaleChords.slice(0, 5)\n        : this.selectedScaleChords.slice(0, 7);\n    },\n    adjustedRomanNumerals() {\n      return this.isPentatonicScale && this.selectedScale\n        ? this.selectedScale.romanNumerals\n        : this.selectedScale?.romanNumerals || [];\n    },\n    isPentatonicScale() {\n      return this.selectedScale?.name.toLowerCase().includes(\"pentatonic\");\n    },\n  },\n  mounted() {\n    this.renderGuitarChords();\n  },\n  watch: {\n    selectedScaleChords() {\n      this.renderGuitarChords();\n    },\n  },\n  methods: {\n    colorCoding(chord) {\n      if (chord && chord.includes(\"dim\")) {\n        return \"bg-diminished\";\n      } else if (chord && chord.includes(\"Aug\")) {\n        return \"bg-augmented\";\n      } else if (chord && chord.includes(\"min\")) {\n        return \"bg-minor\";\n      } else if (chord && chord.includes(\"sus\")) {\n        return \"bg-suspended\";\n      } else {\n        return \"bg-major\";\n      }\n    },\n    displayNotation(chord) {\n      if (chord && chord.includes(\"dim\")) {\n        return \"°\";\n      } else if (chord && chord.includes(\"Aug\")) {\n        return \"+\";\n      } else if (chord && chord.includes(\"m\")) {\n        return \"m\";\n      } else if (chord && chord.includes(\"sus\")) {\n        return \"sus\";\n      } else {\n        return \"\";\n      }\n    },\n    renderGuitarChords() {\n      console.log(\"Rendering guitar chords...\");\n      console.log(\"Adjusted scale chords:\", this.adjustedScaleChords);\n\n      // Clear existing chords\n      this.adjustedScaleChords.forEach((_, index) => {\n        const container = this.$refs.chordContainer[index];\n        if (container) {\n          container.innerHTML = \"\";\n        }\n      });\n\n      // Render new chords\n      this.adjustedScaleChords.forEach((chord, index) => {\n        const container = this.$refs.chordContainer[index];\n        if (container) {\n          const chordName = this.getChordName(\n            chord,\n            this.adjustedScaleNotes[index]\n          );\n          const chordData = this.getChordData(chordName);\n          console.log(`Chord data for ${chordName}:`, chordData);\n          if (chordData && chordData.fingers) {\n            new SVGuitarChord(`#chord-${index}`)\n              .chord({\n                fingers: chordData.fingers,\n                barres: chordData.barres || [],\n              })\n              .draw();\n          }\n        }\n      });\n    },\n    getChordName(chord, note) {\n      if (chord && chord.includes(\"°\")) {\n        return `${note} diminished`;\n      } else if (chord && chord.includes(\"+\")) {\n        return `${note} augmented`;\n      } else if (chord && chord.includes(\"m\")) {\n        return `${note} minor`;\n      } else {\n        return `${note} major`;\n      }\n    },\n    getChordData(chordName) {\n      return chordData.chords.find((chord) => chord.name === chordName) || {};\n    },\n  },\n};\n</script>\n<style scoped>\n.bg-major {\n  color: white;\n  background-color: #3498db; /* Base color */\n}\n\n.bg-minor {\n  color: white;\n  background-color: #2980b9; /* Slightly darker, sadder */\n}\n\n.bg-augmented {\n  color: white;\n  background-color: #5dade2; /* Brighter / more tension */\n}\n\n.bg-diminished {\n  color: white;\n  background-color: #1f618d; /* Dark, tense, less saturated */\n}\n\n.bg-suspended {\n  color: white;\n  background-color: #2874a6; /* Slightly more saturated than minor */\n}\n\n.bg-base-color {\n  color: white;\n  background-color: #3498db; /* Same as the Major chord */\n}\n</style>\n","import { render } from \"./ChordTable.vue?vue&type=template&id=7e81d867&scoped=true\"\nimport script from \"./ChordTable.vue?vue&type=script&lang=js\"\nexport * from \"./ChordTable.vue?vue&type=script&lang=js\"\n\nimport \"./ChordTable.vue?vue&type=style&index=0&id=7e81d867&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7e81d867\"]])\n\nexport default __exports__","import { render } from \"./SongComplete.vue?vue&type=template&id=01508258\"\nimport script from \"./SongComplete.vue?vue&type=script&lang=js\"\nexport * from \"./SongComplete.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"card bg-card shadow-sm pb-3\">\n        <div class=\"card-body\">\n          <div class=\"d-flex align-items-center\">\n            <h1 class=\"fs-4 my-auto fw-bold text-start text-dark-muted\">\n              Song Library\n            </h1>\n            <div\n              class=\"bi bi-info-circle ms-2\"\n              @click=\"showTooltip = !showTooltip\"\n            ></div>\n          </div>\n          <div v-if=\"showTooltip\" class=\"tooltip-content p-2\">\n            <p class=\"small\">\n              This app uses local storage to save your data. Local storage is a\n              browser-specific feature that stores data on your device. This\n              means your data is only accessible on the device and browser you\n              are currently using.\n            </p>\n          </div>\n          <hr />\n          <table class=\"table input-off-white text-dark-muted\">\n            <thead>\n              <tr class=\"text-start\">\n                <th scope=\"col\" style=\"width: 5%\">#</th>\n                <th scope=\"col\" style=\"width: 20%\">Title</th>\n                <th scope=\"col\" style=\"width: 45%\">Hook</th>\n                <th scope=\"col\" style=\"width: 20%\">Last Edit</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"(song, index) in getSongs\"\n                :key=\"song.id\"\n                @click=\"selectSong(song)\"\n                :class=\"{\n                  'table-primary': song.id === activeSongId,\n                  'cursor-pointer': true,\n                }\"\n              >\n                <th class=\"text-start\" scope=\"row\">{{ index + 1 }}</th>\n                <td class=\"text-start\">{{ song.title }}</td>\n                <td class=\"text-start\">{{ song.hook }}</td>\n                <td class=\"text-start\">{{ formatDate(song.lastEdit) }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col\">\n            <button\n              class=\"btn btn-outline-custom me-2 btn-sm fw-bold\"\n              @click=\"confirmRemoveSong\"\n            >\n              Remove Song\n            </button>\n            <button\n              class=\"btn btn-outline-custom btn-sm fw-bold\"\n              @click=\"newSong\"\n            >\n              Add Song\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"SongLibrary\",\n  data() {\n    return {\n      selectedSong: null, // Currently selected song\n      showTooltip: false, // Tooltip visibility state\n    };\n  },\n  computed: {\n    ...mapGetters([\"getSongs\", \"getActiveSong\"]), // Map Vuex getters\n    activeSongId() {\n      return this.getActiveSong ? this.getActiveSong.id : null;\n    },\n    activeSong() {\n      return this.getActiveSong;\n    },\n  },\n  methods: {\n    ...mapActions([\n      \"addSong\", // Action to add a new song to vuex\n      \"deleteSong\", // Action to delete a song from vuex\n      \"setActiveSong\", // Action to set the active song\n      \"updateSong\", // Action to update a song in vuex\n      \"setSongs\", // Action to set the list of songs in vuex\n      \"resetStore\", // Action to reset the Vuex store\n    ]),\n    selectSong(song) {\n      // Update the selected song and set it as active\n      if (this.selectedSong) {\n        this.updateSong(this.selectedSong);\n      }\n      this.selectedSong = song;\n      this.setActiveSong(song);\n    },\n    async newSong() {\n      // Add a new song and update the datastore\n      await this.addSong();\n      const newSong = this.getSongs[this.getSongs.length - 1];\n      this.selectSong(newSong);\n    },\n    confirmRemoveSong() {\n      // Confirm before removing the selected song\n      if (this.selectedSong) {\n        if (\n          confirm(\n            `Are you sure you want to remove the song \"${this.selectedSong.title}\"?`\n          )\n        ) {\n          this.removeSong();\n        }\n      } else {\n        alert(\"Please select a song to remove.\");\n      }\n    },\n    removeSong() {\n      // Remove the selected song and update the datastore\n      if (this.selectedSong) {\n        this.deleteSong(this.selectedSong.id);\n\n        this.selectedSong = null;\n        this.refreshAppState();\n      }\n    },\n    refreshAppState() {\n      // Refresh the application state after removing a song\n      if (this.getSongs.length === 0) {\n        this.resetStore();\n      } else {\n        this.setSongs(this.getSongs);\n        this.setActiveSong(null);\n      }\n    },\n    formatDate(dateString) {\n      // Format the date string to a readable format\n      const date = new Date(dateString);\n      const options = {\n        month: \"2-digit\",\n        day: \"2-digit\",\n        year: \"2-digit\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      };\n      return date.toLocaleString(\"en-US\", options).replace(\",\", \"\");\n    },\n  },\n  watch: {\n    getSongs: {\n      handler() {\n        // Update the selected song if the list of songs changes\n        if (this.selectedSong) {\n          this.selectedSong = this.getSongs.find(\n            (song) => song.id === this.selectedSong.id\n          );\n        }\n      },\n      deep: true,\n    },\n    getActiveSong: {\n      handler(newActiveSong) {\n        // Update the selected song when the active song changes\n        this.selectedSong = newActiveSong;\n      },\n      immediate: true,\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cursor-pointer {\n  cursor: pointer;\n}\n.table-primary {\n  background-color: #e8cfa5; /* Light sandy brown */\n}\n.tooltip-content {\n  background-color: #f8f9fa;\n  border-radius: 5px;\n  position: absolute;\n  z-index: 1000;\n  width: 300px;\n  top: 50px;\n  left: 50px;\n}\n</style>\n","import { render } from \"./SongLibrary.vue?vue&type=template&id=ad141fd4&scoped=true\"\nimport script from \"./SongLibrary.vue?vue&type=script&lang=js\"\nexport * from \"./SongLibrary.vue?vue&type=script&lang=js\"\n\nimport \"./SongLibrary.vue?vue&type=style&index=0&id=ad141fd4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ad141fd4\"]])\n\nexport default __exports__","import { render } from \"./ActivityView.vue?vue&type=template&id=e5e1c004\"\nimport script from \"./ActivityView.vue?vue&type=script&lang=js\"\nexport * from \"./ActivityView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=1f2d179d\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","const sectionTemplates = [\n  {\n    name: \"Standard\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Extended\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"v\", \"b\", \"c\"],\n  },\n  {\n    name: \"Simple\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Bridge First\",\n    arrangement: [\"b\", \"v\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Outro Heavy\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"c\", \"c\"],\n  },\n  {\n    name: \"Intro and Outro\",\n    arrangement: [\"v\", \"c\", \"b\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Double Bridge\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"b\", \"c\"],\n  },\n  {\n    name: \"Refrain Heavy\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"c\"],\n  },\n  {\n    name: \"Minimalist\",\n    arrangement: [\"v\", \"c\"],\n  },\n  {\n    name: \"All Verse\",\n    arrangement: [\"v\", \"v\", \"v\", \"v\"],\n  },\n  {\n    name: \"Verse Driven\",\n    arrangement: [\"v\", \"v\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Double Verse\",\n    arrangement: [\"v\", \"v\", \"c\", \"v\", \"v\", \"c\"],\n  },\n  {\n    name: \"No Bridge\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Climactic\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Retro\",\n    arrangement: [\"v\", \"b\", \"v\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Experimental\",\n    arrangement: [\"b\", \"c\", \"v\", \"b\", \"v\", \"c\"],\n  },\n  {\n    name: \"Crescendo\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"b\", \"c\", \"c\"],\n  },\n  {\n    name: \"Intro Repeat\",\n    arrangement: [\"v\", \"v\", \"c\", \"v\", \"c\", \"c\"],\n  },\n  {\n    name: \"Verse First\",\n    arrangement: [\"v\", \"v\", \"v\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Bridge Ending\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"b\", \"b\"],\n  },\n  {\n    name: \"Triple Verse\",\n    arrangement: [\"v\", \"v\", \"v\", \"c\", \"c\"],\n  },\n  {\n    name: \"Verse Heavy\",\n    arrangement: [\"v\", \"v\", \"v\", \"c\", \"v\", \"b\"],\n  },\n  {\n    name: \"All Chorus\",\n    arrangement: [\"c\", \"c\", \"c\", \"c\"],\n  },\n  {\n    name: \"Double Outro\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"c\", \"c\", \"c\"],\n  },\n  {\n    name: \"Chorus Build\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"c\", \"c\"],\n  },\n  {\n    name: \"Looping\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Climactic Outro\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"c\", \"c\", \"c\"],\n  },\n  {\n    name: \"All Bridge\",\n    arrangement: [\"b\", \"b\", \"b\", \"b\"],\n  },\n  {\n    name: \"Interlude Focus\",\n    arrangement: [\"v\", \"c\", \"b\", \"b\", \"c\"],\n  },\n  {\n    name: \"Outro Bridge\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"b\"],\n  },\n  {\n    name: \"Verse Intro\",\n    arrangement: [\"v\", \"v\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Chorus First\",\n    arrangement: [\"c\", \"v\", \"v\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Bridge Finale\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"b\", \"b\", \"b\"],\n  },\n  {\n    name: \"Bridge Peak\",\n    arrangement: [\"v\", \"c\", \"b\", \"b\", \"c\", \"c\"],\n  },\n  {\n    name: \"Balanced\",\n    arrangement: [\"v\", \"c\", \"b\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Layered\",\n    arrangement: [\"v\", \"c\", \"b\", \"v\", \"c\", \"c\"],\n  },\n  {\n    name: \"Dynamic\",\n    arrangement: [\"b\", \"c\", \"v\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Inverse\",\n    arrangement: [\"c\", \"v\", \"b\", \"v\", \"c\"],\n  },\n  {\n    name: \"Echo\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"v\", \"c\"],\n  },\n  {\n    name: \"End Focus\",\n    arrangement: [\"v\", \"c\", \"b\", \"c\", \"b\", \"c\"],\n  },\n  {\n    name: \"Sequential\",\n    arrangement: [\"v\", \"c\", \"b\", \"v\", \"c\", \"b\"],\n  },\n  {\n    name: \"Complex\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"c\", \"v\", \"b\", \"c\"],\n  },\n  {\n    name: \"Heavy Outro\",\n    arrangement: [\"v\", \"c\", \"b\", \"c\", \"c\", \"c\"],\n  },\n  {\n    name: \"Evolving\",\n    arrangement: [\"v\", \"c\", \"v\", \"b\", \"v\", \"c\", \"b\"],\n  },\n  {\n    name: \"Drift\",\n    arrangement: [\"v\", \"v\", \"c\", \"b\", \"v\", \"c\"],\n  },\n  {\n    name: \"Offset\",\n    arrangement: [\"v\", \"b\", \"c\", \"v\", \"b\", \"c\"],\n  },\n  {\n    name: \"Stacked\",\n    arrangement: [\"v\", \"v\", \"b\", \"b\", \"c\", \"c\"],\n  },\n  {\n    name: \"Triple Bridge\",\n    arrangement: [\"v\", \"c\", \"b\", \"b\", \"b\", \"c\"],\n  },\n  {\n    name: \"Finale\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"b\", \"b\", \"c\"],\n  },\n  {\n    name: \"Vibrant\",\n    arrangement: [\"v\", \"c\", \"b\", \"c\", \"v\", \"c\"],\n  },\n  {\n    name: \"Repeater\",\n    arrangement: [\"v\", \"c\", \"v\", \"c\", \"b\", \"c\", \"b\", \"c\"],\n  },\n];\n\nexport default sectionTemplates;\n","const moods = [\n  { mood: \"Happy\", implications: \"Major chords\" },\n  { mood: \"Sad\", implications: \"Minor chords and slower tempo\" },\n  { mood: \"Angry\", implications: \"Distorted guitars and fast tempo\" },\n  { mood: \"Excited\", implications: \"Upbeat rhythm and high energy\" },\n  { mood: \"Calm\", implications: \"Soft dynamics and slow tempo\" },\n  { mood: \"Romantic\", implications: \"Smooth melodies and gentle harmonies\" },\n  { mood: \"Melancholic\", implications: \"Minor chords and reflective lyrics\" },\n  { mood: \"Energetic\", implications: \"Driving beat and syncopation\" },\n  { mood: \"Reflective\", implications: \"Acoustic instruments and slow pace\" },\n  { mood: \"Hopeful\", implications: \"Ascending melodies and major chords\" },\n  { mood: \"Triumphant\", implications: \"Bold brass and rising dynamics\" },\n  { mood: \"Mysterious\", implications: \"Unresolved chords and unusual scales\" },\n  { mood: \"Tense\", implications: \"Dissonance and repetitive rhythms\" },\n  { mood: \"Cheerful\", implications: \"Bright instrumentation and quick tempo\" },\n  { mood: \"Lonely\", implications: \"Sparse arrangement and minor keys\" },\n  {\n    mood: \"Playful\",\n    implications: \"Bouncy rhythms and quirky instrumentation\",\n  },\n  { mood: \"Dark\", implications: \"Low tones and slow, brooding tempo\" },\n  { mood: \"Dreamy\", implications: \"Echo effects and soft harmonies\" },\n  { mood: \"Optimistic\", implications: \"Rising melodies and energetic tempo\" },\n  { mood: \"Nostalgic\", implications: \"Warm tones and vintage instrumentation\" },\n  { mood: \"Aggressive\", implications: \"Heavy percussion and intense dynamics\" },\n  { mood: \"Peaceful\", implications: \"Smooth transitions and mellow tones\" },\n  { mood: \"Groovy\", implications: \"Syncopated bass lines and steady rhythm\" },\n  {\n    mood: \"Quirky\",\n    implications: \"Unexpected chord progressions and unusual instruments\",\n  },\n  { mood: \"Ethereal\", implications: \"Reverb-heavy and light textures\" },\n];\n\nexport default moods;\n","const keys = [    \n    \"C\",\n    \"G\",\n    \"D\",\n    \"A\",\n    \"E\",\n    \"B\",\n    \"F#\",\n    \"C#\",\n    \"G#\",\n    \"D#\",\n    \"A#\",\n    \"F\"\n];\n\nexport default keys;\n","const scales = [\n  {\n    name: \"Major\",\n    emotionalQuality: \"Happy\",\n    intervals: [\"W\", \"W\", \"H\", \"W\", \"W\", \"W\", \"H\"],\n    notes: (key) => generateScale(key, [\"W\", \"W\", \"H\", \"W\", \"W\", \"W\", \"H\"]),\n    chords: [\"Maj\", \"min\", \"min\", \"Maj\", \"Maj\", \"min\", \"dim\"],\n    romanNumerals: [\"I\", \"ii\", \"iii\", \"IV\", \"V\", \"vi\", \"vii°\"],\n  },\n  {\n    name: \"Minor\",\n    emotionalQuality: \"Sad\",\n    intervals: [\"W\", \"H\", \"W\", \"W\", \"H\", \"W\", \"W\"],\n    notes: (key) => generateScale(key, [\"W\", \"H\", \"W\", \"W\", \"H\", \"W\", \"W\"]),\n    chords: [\"min\", \"dim\", \"Maj\", \"min\", \"min\", \"Maj\", \"Maj\"],\n    romanNumerals: [\"i\", \"ii°\", \"III\", \"iv\", \"v\", \"VI\", \"VII\"],\n  },\n  {\n    name: \"Dorian\",\n    emotionalQuality: \"Jazz-like\",\n    intervals: [\"W\", \"H\", \"W\", \"W\", \"W\", \"H\", \"W\"],\n    notes: (key) => generateScale(key, [\"W\", \"H\", \"W\", \"W\", \"W\", \"H\", \"W\"]),\n    chords: [\"min\", \"min\", \"Maj\", \"Maj\", \"min\", \"dim\", \"Maj\"],\n    romanNumerals: [\"i\", \"ii\", \"III\", \"IV\", \"v\", \"vi°\", \"VII\"],\n  },\n  {\n    name: \"Phrygian\",\n    emotionalQuality: \"Exotic\",\n    intervals: [\"H\", \"W\", \"W\", \"W\", \"H\", \"W\", \"W\"],\n    notes: (key) => generateScale(key, [\"H\", \"W\", \"W\", \"W\", \"H\", \"W\", \"W\"]),\n    chords: [\"min\", \"Maj\", \"Maj\", \"min\", \"dim\", \"Maj\", \"min\"],\n    romanNumerals: [\"i\", \"II\", \"III\", \"iv\", \"v°\", \"VI\", \"vii\"],\n  },\n  {\n    name: \"Lydian\",\n    emotionalQuality: \"Dreamy\",\n    intervals: [\"W\", \"W\", \"W\", \"H\", \"W\", \"W\", \"H\"],\n    notes: (key) => generateScale(key, [\"W\", \"W\", \"W\", \"H\", \"W\", \"W\", \"H\"]),\n    chords: [\"Maj\", \"Maj\", \"min\", \"dim\", \"Maj\", \"min\", \"min\"],\n    romanNumerals: [\"I\", \"II\", \"iii\", \"iv°\", \"V\", \"vi\", \"vii\"],\n  },\n  {\n    name: \"Mixolydian\",\n    emotionalQuality: \"Bluesy\",\n    intervals: [\"W\", \"W\", \"H\", \"W\", \"W\", \"H\", \"W\"],\n    notes: (key) => generateScale(key, [\"W\", \"W\", \"H\", \"W\", \"W\", \"H\", \"W\"]),\n    chords: [\"Maj\", \"min\", \"dim\", \"Maj\", \"min\", \"min\", \"Maj\"],\n    romanNumerals: [\"I\", \"ii\", \"iii°\", \"IV\", \"v\", \"vi\", \"VII\"],\n  },\n  {\n    name: \"Locrian\",\n    emotionalQuality: \"Dissonant\",\n    intervals: [\"H\", \"W\", \"W\", \"H\", \"W\", \"W\", \"W\"],\n    notes: (key) => generateScale(key, [\"H\", \"W\", \"W\", \"H\", \"W\", \"W\", \"W\"]),\n    chords: [\"dim\", \"min\", \"min\", \"Maj\", \"min\", \"Maj\", \"Maj\"],\n    romanNumerals: [\"i°\", \"ii\", \"iii\", \"IV\", \"v\", \"VI\", \"VII\"],\n  },\n  {\n    name: \"Major Pentatonic\",\n    emotionalQuality: \"Versatile\",\n    intervals: [\"W\", \"W\", \"WH\", \"W\", \"WH\"],\n    notes: (key) => generateScale(key, [\"W\", \"W\", \"WH\", \"W\", \"WH\"]),\n    chords: [\"Maj\", \"min\", \"min\", \"Maj\", \"min\"],\n    romanNumerals: [\"I\", \"ii\", \"iii\", \"V\", \"vi\"],\n  },\n  {\n    name: \"Minor Pentatonic\",\n    emotionalQuality: \"Bluesy\",\n    intervals: [\"WH\", \"W\", \"W\", \"WH\", \"W\"],\n    notes: (key) => generateScale(key, [\"WH\", \"W\", \"W\", \"WH\", \"W\"]),\n    chords: [\"min\", \"Maj\", \"min\", \"min\", \"Maj\"],\n    romanNumerals: [\"i\", \"III\", \"iv\", \"v\", \"VII\"],\n  },\n  {\n    name: \"Major Blues\",\n    emotionalQuality: \"Soulful\",\n    intervals: [\"W\", \"W\", \"H\", \"W\", \"W\", \"H\", \"W\"],\n    notes: (key) => generateScale(key, [\"W\", \"W\", \"H\", \"W\", \"W\", \"H\", \"W\"]),\n    chords: [\"Maj\", \"min\", \"min\", \"Maj\", \"Maj\", \"min\", \"dim\"],\n    romanNumerals: [\"I\", \"ii\", \"iii\", \"IV\", \"V\", \"vi\", \"vii°\"],\n  },\n  {\n    name: \"Minor Blues\",\n    emotionalQuality: \"Soulful\",\n    intervals: [\"W\", \"H\", \"W\", \"W\", \"H\", \"W\", \"W\"],\n    notes: (key) => generateScale(key, [\"W\", \"H\", \"W\", \"W\", \"H\", \"W\", \"W\"]),\n    chords: [\"min\", \"dim\", \"Maj\", \"min\", \"min\", \"Maj\", \"Maj\"],\n    romanNumerals: [\"i\", \"ii°\", \"III\", \"iv\", \"v\", \"VI\", \"VII\"],\n  },\n  {\n    name: \"Harmonic Minor\",\n    emotionalQuality: \"Dramatic\",\n    intervals: [\"W\", \"H\", \"W\", \"W\", \"H\", \"WH\", \"H\"],\n    notes: (key) => generateScale(key, [\"W\", \"H\", \"W\", \"W\", \"H\", \"WH\", \"H\"]),\n    chords: [\"min\", \"dim\", \"Aug\", \"min\", \"Maj\", \"Maj\", \"dim\"],\n    romanNumerals: [\"i\", \"ii°\", \"III+\", \"iv\", \"V\", \"VI\", \"vii°\"],\n  },\n  {\n    name: \"Melodic Minor\",\n    emotionalQuality: \"Sophisticated\",\n    intervals: [\"W\", \"H\", \"W\", \"W\", \"W\", \"W\", \"H\"],\n    notes: (key) => generateScale(key, [\"W\", \"H\", \"W\", \"W\", \"W\", \"W\", \"H\"]),\n    chords: [\"min\", \"min\", \"Aug\", \"Maj\", \"Maj\", \"dim\", \"dim\"],\n    romanNumerals: [\"i\", \"ii\", \"III+\", \"IV\", \"V\", \"vi°\", \"vii°\"],\n  }\n];\n\nfunction generateScale(key, intervals) {\n  const notes = [\n    \"C\",\n    \"G\",\n    \"D\",\n    \"A\",\n    \"E\",\n    \"B\",\n    \"F#\",\n    \"C#\",\n    \"G#\",\n    \"D#\",\n    \"A#\",\n    \"F\",\n  ];\n  let scale = [];\n  let startIndex = notes.indexOf(key);\n\n  if (startIndex === -1) throw new Error(\"Invalid key\");\n\n  scale.push(notes[startIndex]);\n\n  intervals.forEach((interval) => {\n    let step;\n    if (interval === \"W\") {\n      step = 2;\n    } else if (interval === \"H\") {\n      step = 1;\n    } else {\n      step = 3;\n    }\n    startIndex += step;\n    scale.push(notes[startIndex % 12]);\n  });\n\n  return scale;\n}\n\nexport default scales;\n","const prompts = [\n    \"Write about a memory you can't fully trust.\",\n    \"Imagine the smell of a season you've never experienced.\",\n    \"Describe a moment when silence felt louder than words.\",\n    \"What's the shape of regret? Let it sing.\",\n    \"Revisit an ordinary conversation that changed your life.\",\n    \"Capture the feeling of being late for something that no longer matters.\",\n    \"What would a bird think of your happiest memory?\",\n    \"Describe the sound of something breaking—slowly.\",\n    \"Write about a dream you haven't had yet.\",\n    \"What's hiding in the gap between two goodbyes?\",\n    \"Take a childhood fear and make it a hero.\",\n    \"Write about a day when everything seemed upside down but no one noticed.\",\n    \"Imagine forgetting something important. What remains?\",\n    \"What color was the sky when you first felt alive?\",\n    \"Write about the last time you lied to yourself.\",\n    \"What's the texture of a memory you're trying to bury?\",\n    \"Write as though you're whispering to someone who isn't there.\",\n    \"What's the taste of an unfinished apology?\",\n    \"Turn an argument into a map. Where does it lead?\",\n    \"Describe your reflection if the mirror told the truth.\",\n    \"What would your shadow say about you?\",\n    \"Write about a moment you were seen—but didn't want to be.\",\n    \"How does joy behave when it thinks no one's watching?\",\n    \"Write about the weight of an ordinary object.\",\n    \"What song does the moon hum when no one's awake?\",\n    \"Describe the first time you realized the world isn't fair.\",\n    \"Imagine laughter as something tangible—what would you do with it?\",\n    \"What's the echo of something you've lost?\",\n    \"Write about the first time you truly felt the weather.\",\n    \"Take a piece of advice you never followed. Write its story.\",\n    \"What does your name taste like to someone who's never spoken it?\",\n    \"Describe the sound of an unanswered question.\",\n    \"Write about a time when your favorite song betrayed you.\",\n    \"How does loneliness change the shape of a room?\",\n    \"What's the melody of a secret you've kept for years?\",\n    \"Write about a stranger you'll never meet again.\",\n    \"What would happen if your happiest memory were rewritten?\",\n    \"Describe the way light moves when no one's around to see it.\",\n    \"Write about the moment before you knew what would happen.\",\n    \"What's the rhythm of someone walking away?\",\n    \"How would your favorite place apologize for changing?\",\n    \"What's the sound of holding back tears?\",\n    \"Write about an apology you never gave.\",\n    \"How does time feel in your hands?\",\n    \"Describe the first time you forgot something important.\",\n    \"What's the chorus of a goodbye you never said?\",\n    \"Imagine your favorite memory is a movie—write the end credits.\",\n    \"Write about the way a place remembers you.\",\n    \"What's the sound of something you can't forgive?\",\n    \"Describe how the wind feels when it's carrying someone else's story.\",\n    \"Write about a smile that felt like a trap.\",\n    \"What's the sound of a conversation ending too soon?\",\n    \"Describe a relationship as though it were a piece of furniture.\",\n    \"Write about the space between holding hands and letting go.\",\n    \"What's the texture of a goodbye you didn't believe?\",\n    \"Imagine two people who are mirrors for each other. What do they see?\",\n    \"Write about the first time someone's laugh felt like home.\",\n    \"What would a misunderstanding look like if it were alive?\",\n    \"Describe the way someone's voice changed when they stopped caring.\",\n    \"Write about a moment when a hug felt heavier than words.\",\n    \"How does betrayal move through the air?\",\n    \"What's the taste of an unspoken truth between two people?\",\n    \"Imagine a relationship as a staircase—where does it lead?\",\n    \"Write about a love that never quite fit.\",\n    \"Describe the shadow of someone you miss.\",\n    \"What's the sound of a fight that isn't over?\",\n    \"Write about a secret you shared but wish you hadn't.\",\n    \"What does forgiveness smell like?\",\n    \"Write about a moment when a glance said everything.\",\n    \"What's the shape of a promise you couldn't keep?\",\n    \"Describe the way someone's absence feels in a crowded room.\",\n    \"Write about the rhythm of a relationship that stopped working.\",\n    \"What does longing look like when it thinks no one's watching?\",\n    \"Write about a time when words weren't enough.\",\n    \"How does love behave when it's trying to hide?\",\n    \"Describe a relationship as though it were a river. Where does it flow?\",\n    \"What's the melody of two people who've drifted apart?\",\n    \"Write about a moment when you felt replaced.\",\n    \"What does a shared secret sound like from a distance?\",\n    \"Imagine a friendship as a plant—describe how it grows.\",\n    \"What's the taste of a conversation you regret?\",\n    \"Write about the silence that lingers after an argument.\",\n    \"Describe a relationship that felt like a puzzle with missing pieces.\",\n    \"What does affection feel like when it's unspoken?\",\n    \"Write about a laugh you haven't heard in years.\",\n    \"What's the weight of a memory two people share but don't talk about?\",\n    \"Imagine a phone call that never happened—what was said?\",\n    \"Write about a relationship as though it were a piece of music.\",\n    \"What's the sound of someone walking away without looking back?\",\n    \"Describe the feeling of being known too well.\",\n    \"Write about a time when a compliment felt like a lie.\",\n    \"What does a goodbye sound like when it's meant forever?\",\n    \"Imagine two people who are oceans apart—what connects them?\",\n    \"Write about the way someone's presence changes a room.\",\n    \"What's the rhythm of a relationship that never quite began?\",\n    \"Describe a moment when someone's kindness caught you off guard.\",\n    \"Write about the taste of a relationship that's gone sour.\",\n    \"What does regret feel like when it belongs to someone else?\",\n    \"Imagine a relationship as a storm—what's the aftermath?\",\n    \"Write about a moment when you couldn't say what needed to be said.\",\n    \"Write about the first time you felt out of place in a crowd.\",\n    \"What's the sound of trying to blend in?\",\n    \"Describe a moment when you felt invisible and powerful at the same time.\",\n    \"What's the shape of responsibility as you carry it?\",\n    \"Write about a time when the rules didn't make sense to you.\",\n    \"How does ambition feel in your hands?\",\n    \"Imagine your role in society as a thread in a larger fabric—what color is it?\",\n    \"What's the rhythm of a system you don't understand?\",\n    \"Write about the weight of expectations that weren't yours to carry.\",\n    \"What does a small act of rebellion taste like?\",\n    \"Describe the sound of your voice among many others.\",\n    \"Write about a time when you questioned your purpose.\",\n    \"What's the melody of being overlooked?\",\n    \"Imagine your job as a dance—how do you move?\",\n    \"Write about a moment when you felt like a cog in a machine.\",\n    \"What does respect look like when it's worn thin?\",\n    \"Describe the feeling of contributing to something larger than yourself.\",\n    \"What's the taste of compromise in the name of survival?\",\n    \"Write about the sound of a paycheck hitting your hands.\",\n    \"Imagine being a pillar in a crumbling structure—how do you hold up?\",\n    \"What's the texture of obligation?\",\n    \"Describe a moment when you felt like a stranger in your own city.\",\n    \"What does hope sound like when it's shared by many?\",\n    \"Write about a role you didn't choose but took on anyway.\",\n    \"What's the rhythm of fitting in where you don't belong?\",\n    \"Imagine your life as a book—what's the title society would give it?\",\n    \"Write about a moment when you stood up for something you believed in.\",\n    \"What does success feel like when it doesn't look like you imagined?\",\n    \"Describe the weight of an unspoken expectation.\",\n    \"Write about the sound of marching forward even when you don't agree.\",\n    \"What's the melody of holding a sign in protest?\",\n    \"Imagine your role in society as a clock—how do you tick?\",\n    \"Write about a moment when you felt like you were just going through the motions.\",\n    \"What does responsibility smell like when it's left undone?\",\n    \"Describe the feeling of being a small part of something enormous.\",\n    \"What's the texture of a system that doesn't see you?\",\n    \"Write about a moment when you felt your contribution wasn't enough.\",\n    \"Imagine your role in society as a tree—what kind of tree are you?\",\n    \"What does sacrifice feel like when it's unnoticed?\",\n    \"Write about the rhythm of working to live rather than living to work.\",\n    \"Describe the sound of stepping out of line.\",\n    \"What's the weight of following rules that don't feel fair?\",\n    \"Write about a moment when you felt judged by strangers.\",\n    \"What's the melody of a system you want to change?\",\n    \"Imagine being the bridge between two sides—what does that feel like?\",\n    \"Write about the feeling of being both celebrated and misunderstood.\",\n    \"What does progress sound like when it moves too slowly?\",\n    \"Describe a moment when you felt like you belonged and didn't at the same time.\",\n    \"What's the taste of conformity?\",\n    \"Write about the sound of your role shifting in an unsteady world.\",\n    \"What would Earth write in a letter to humanity?\",\n    \"Describe the first sunrise as seen by humankind.\",\n    \"What's the sound of progress when it costs too much?\",\n    \"Imagine the collective heartbeat of humanity—what does it feel like?\",\n    \"Write about the weight of history on the shoulders of the present.\",\n    \"What's the melody of hope when it spans generations?\",\n    \"Describe humanity's shadow—what does it look like?\",\n    \"What would the stars say if they could speak?\",\n    \"Write about a moment when humanity seemed like one person.\",\n    \"What's the taste of a world rebuilding itself?\",\n    \"Imagine the song of a future humanity.\",\n    \"What does the planet sound like when it's sighing?\",\n    \"Write about the first handshake between two worlds.\",\n    \"What's the color of humanity's dreams?\",\n    \"Describe the echo of human voices in an empty space.\",\n    \"What does kindness look like when multiplied by billions?\",\n    \"Write about the way we leave marks on the world.\",\n    \"What's the sound of forgiveness when it spans the entire species?\",\n    \"Imagine humanity as a tree—how do its branches grow?\",\n    \"Write about the way humanity sees itself in the mirror.\",\n    \"What would a river say about the humans it's carried?\",\n    \"Describe the first time someone looked at the moon and wondered.\",\n    \"What's the rhythm of innovation and destruction?\",\n    \"Write about humanity as though it were a single person.\",\n    \"What does love look like on a global scale?\",\n    \"Imagine humanity's collective memory as a library—what's missing?\",\n    \"What's the sound of a billion people dreaming at once?\",\n    \"Write about the balance between creation and consumption.\",\n    \"Describe the first moment someone realized they weren't alone.\",\n    \"What does the Earth feel like when it's forgotten?\",\n    \"Write about humanity's relationship with time.\",\n    \"What's the taste of a shared meal that spans cultures?\",\n    \"Describe the way humans find meaning in the stars.\",\n    \"What's the melody of a planet on the brink of change?\",\n    \"Write about humanity's relationship with its own reflection.\",\n    \"What does survival sound like when it's a global effort?\",\n    \"Imagine the collective grief of the world—what does it say?\",\n    \"Write about a moment when humanity overcame its differences.\",\n    \"What's the color of understanding between strangers?\",\n    \"Describe the way humanity would introduce itself to the universe.\",\n    \"What's the sound of the first footstep on an untouched world?\",\n    \"Write about the way humanity remembers its mistakes.\",\n    \"What does the future look like when it smiles back?\",\n    \"Imagine the Earth as a canvas—what does humanity paint?\",\n    \"What's the rhythm of rebuilding what was once lost?\",\n    \"Write about the shared experience of looking up at the sky.\",\n    \"What does compassion sound like on a planetary scale?\",\n    \"Describe humanity's place in the infinite.\",\n    \"What's the melody of the first song sung by every culture?\",\n    \"Write about the way humanity holds onto hope.\",\n    \"What would a cat say if it could text?\",\n    \"Describe a day in the life of a professional procrastinator.\",\n    \"What's the secret life of a sock that goes missing in the laundry?\",\n    \"Write about a world where everyone communicates through dance.\",\n    \"What's the story behind the last slice of pizza?\",\n    \"Describe the adventures of a rubber duck in a bathtub.\",\n    \"What would happen if gravity took a day off?\",\n    \"Write about a conversation between a toaster and a refrigerator.\",\n    \"What's the most ridiculous conspiracy theory you can think of?\",\n    \"Describe a day where everything you touch turns into cheese.\",\n    \"What's the plot of a soap opera starring houseplants?\",\n    \"Write about a superhero whose power is extreme laziness.\",\n    \"What would a dog's diary entry look like?\",\n    \"Describe a world where everyone has to rhyme when they speak.\",\n    \"What's the most absurd law you can imagine?\",\n    \"Write about a day in the life of a professional napper.\",\n    \"What's the story behind a mysterious rubber chicken?\",\n    \"Describe a world where everyone has to wear mismatched shoes.\",\n    \"What would happen if all the clocks in the world stopped?\",\n    \"Write about a conversation between a pencil and an eraser.\",\n    \"What's the most bizarre dream you've ever had?\",\n    \"Describe a world where everyone has to sing instead of talk.\",\n    \"What's the plot of a reality show starring garden gnomes?\",\n    \"Write about a day where everyone can read each other's thoughts.\",\n    \"What would happen if the internet disappeared for a week?\",\n    \"Describe a world where everyone has to wear a hat at all times.\",\n    \"What's the story behind a haunted coffee mug?\",\n    \"Write about a conversation between a cloud and a rainbow.\",\n    \"What would happen if animals could vote?\",\n    \"Describe a world where everyone has to walk backwards.\",\n    \"What's the most ridiculous invention you can think of?\",\n    \"Write about a day in the life of a professional bubble blower.\",\n    \"What's the story behind a mysterious pair of sunglasses?\",\n    \"Describe a world where everyone has to wear pajamas all day.\",\n    \"What would happen if all the books in the world disappeared?\",\n    \"Write about a conversation between a spoon and a fork.\",\n    \"What's the most absurd talent show act you can imagine?\",\n    \"Describe a world where everyone has to wear roller skates.\",\n    \"What would happen if all the colors in the world changed?\",\n    \"Write about a day where everyone can only speak in questions.\",\n    \"What's the story behind a mysterious key with no lock?\",\n    \"Describe a world where everyone has to wear a costume every day.\",\n    \"What would happen if all the mirrors in the world disappeared?\",\n    \"Write about a conversation between a lamp and a chair.\",\n    \"What's the most bizarre holiday you can think of?\",\n    \"Describe a world where everyone has to wear sunglasses indoors.\",\n    \"What would happen if all the music in the world stopped?\",\n    \"Write about a day in the life of a professional daydreamer.\",\n    \"What's the story behind a mysterious old photograph?\",\n    \"Describe a world where everyone has to wear mismatched socks.\"\n];\n\nexport default prompts;","import { createStore } from \"vuex\";\nimport sectionTemplates from \"@/data/sectionTemplates\"; // Import section templates\nimport moods from \"@/data/moods\"; // Import moods\nimport keys from \"@/data/keys\"; // Import keys\nimport scales from \"@/data/scales\"; // Import scales\nimport majorProgressions from \"@/data/Major_Progressions.json\"; // Import major progressions\nimport minorProgressions from \"@/data/Minor_Progressions.json\"; // Import minor progressions\nimport dorianProgressions from \"@/data/Dorian_Progressions.json\"; // Import dorian progressions\nimport phrygianProgressions from \"@/data/Phrygian_Progressions.json\"; // Import phrygian progressions\nimport lydianProgressions from \"@/data/Lydian_Progressions.json\"; // Import lydian progressions\nimport mixolydianProgressions from \"@/data/Mixolydian_Progressions.json\"; // Import mixolydian progressions\nimport locrianProgressions from \"@/data/Locrian_Progressions.json\"; // Import locrian progressions\nimport minorPentatonicProgressions from \"@/data/Minor_Pentatonic_Progressions.json\"; // Import pentatonic progressions\nimport minorBluesProgressions from \"@/data/Minor_Blues_Progressions.json\"; // Import blues progressions\nimport majorPentatonicProgressions from \"@/data/Major_Pentatonic_Progressions.json\"; // Import major pentatonic progressions\nimport majorBluesProgressions from \"@/data/Major_Blues_Progressions.json\"; // Import major blues progressions\nimport harmonicProgressions from \"@/data/Harmonic_Progressions.json\"; // Import minor harmonic progressions\nimport melodicMinorProgressions from \"@/data/Melodic_Minor_Progressions.json\"; // Import melodic minor progressions\nimport prompts from \"@/data/prompts\"; // Import prompts\n\nconst store = createStore({\n  state: {\n    songs: JSON.parse(localStorage.getItem(\"songs\")) || [], // Load songs from local storage\n    activeSong: JSON.parse(localStorage.getItem(\"activeSong\")) || null, // Load active song from local storage\n    \n\n    unsavedChanges: false, // Track unsaved changes\n    sectionTemplates, // Add sectionTemplates to state\n    moods, // Add moods to state\n    keys, // Add keys to state\n    scales, // Add scales to state\n    majorProgressions, // Add major progressions to state\n    minorProgressions, // Add minor progressions to state\n    dorianProgressions, // Add dorian progressions to state\n    phrygianProgressions, // Add phrygian progressions to state\n    lydianProgressions, // Add lydian progressions to state\n    mixolydianProgressions, // Add mixolydian progressions to state\n    locrianProgressions, // Add locrian progressions to state\n    minorPentatonicProgressions, // Add minor pentatonic progressions to state\n    minorBluesProgressions, // Add minor blues progressions to state\n    majorPentatonicProgressions, // Add major pentatonic progressions to state\n    majorBluesProgressions, // Add major blues progressions to state\n    harmonicProgressions, // Add minor harmonic progressions to state\n    melodicMinorProgressions, // Add melodic minor progressions to state\n    prompts, // Add prompts to state\n    chordProgressions: [], // Add chordProgressions to state\n  },\n  mutations: {\n    SET_UNSAVED_CHANGES(state, value) {\n      // Set the unsaved changes state to the provided value\n      state.unsavedChanges = value;\n    },\n    SET_SONGS(state, value) {\n      // Set the songs state to the provided value\n      state.songs = value;\n    },\n    ADD_SONG(state, value) {\n      // Add a new song to the songs array\n      state.songs.push(value);\n    },\n    DELETE_SONG(state, value) {\n      // Find the index of the song to delete using its id\n      const index = state.songs.findIndex((song) => song.id === value);\n      // Delete the song if it exists\n      if (index !== -1) {\n        state.songs.splice(index, 1);\n      }\n    },\n    UPDATE_SONG(state, value) {\n      // Find the index of the song to update using its id\n      const index = state.songs.findIndex((song) => song.id === value.id);\n      // Update the song if it exists\n      if (index !== -1) {\n        state.songs[index] = {\n          ...state.songs[index], // Preserve existing properties\n          ...value, // Update with new properties\n          lastEdit: new Date().toISOString(), // Update the last edit timestamp\n        };\n      }\n      // Also update the active song if it matches the updated song\n      if (value.id === state.activeSong?.id) {\n        state.activeSong = { ...value };\n      }\n    },\n    SET_ACTIVE_SONG(state, value) {\n      // Set the active song to a copy of the provided value\n      state.activeSong = { ...value };\n    },\n\n    // Song Section Mutations\n    UPDATE_ACTIVE_SONG_SECTION(state, section) {\n      const index = state.activeSong.sections.findIndex((sec) => sec.id === section.id);\n      if (index !== -1) {\n        state.activeSong.sections.splice(index, 1, section);\n      }\n    },\n    MOVE_ACTIVE_SONG_SECTION(state, { index, direction }) {\n      if (direction === \"up\" && index > 0) {\n        [state.activeSong.sections[index - 1], state.activeSong.sections[index]] = [\n          state.activeSong.sections[index],\n          state.activeSong.sections[index - 1],\n        ];\n      } else if (direction === \"down\" && index < state.activeSong.sections.length - 1) {\n        [state.activeSong.sections[index + 1], state.activeSong.sections[index]] = [\n          state.activeSong.sections[index],\n          state.activeSong.sections[index + 1],\n        ];\n      }\n    },\n    ADD_ACTIVE_SONG_SECTION(state, section) {\n      const newSection = {\n        ...section,\n        isMinimized: true, // Ensure new sections start minimized\n      };\n      state.activeSong.sections.push(newSection);\n    },\n    DELETE_ACTIVE_SONG_SECTION(state, sectionId) {\n      state.activeSong.sections = state.activeSong.sections.filter((section) => section.id !== sectionId);\n    },\n\n    // Song Line Mutations\n    UPDATE_ACTIVE_SONG_LINE(state, { sectionId, lineIndex, newLine }) {\n      const section = state.activeSong.sections.find((sec) => sec.id === sectionId);\n      if (section) {\n        section.lines.splice(lineIndex, 1, newLine);\n      }\n    },\n    ADD_ACTIVE_SONG_LINE(state, { sectionId, newLine }) {\n      const section = state.activeSong.sections.find((sec) => sec.id === sectionId);\n      if (section) {\n        section.lines.push(newLine);\n      }\n    },\n    DELETE_ACTIVE_SONG_LINE(state, { sectionId, lineIndex }) {\n      const section = state.activeSong.sections.find((sec) => sec.id === sectionId);\n      if (section) {\n        section.lines.splice(lineIndex, 1);\n      }\n    },\n    SET_CHORD_PROGRESSIONS(state, progressions) {\n      state.chordProgressions = progressions;\n    },\n    SAVE_ACTIVE_SONG(state) {\n      const index = state.songs.findIndex(song => song.id === state.activeSong.id);\n      if (index !== -1) {\n        state.songs[index] = { ...state.activeSong };\n      }\n    },\n  },\n  actions: {\n    setUnsavedChanges({ commit }, value) {\n      // Commit the SET_UNSAVED_CHANGES mutation with the provided value\n      commit(\"SET_UNSAVED_CHANGES\", value);\n    },\n    setSongs({ commit }, value) {\n      // Commit the SET_SONGS mutation with the provided value\n      commit(\"SET_SONGS\", value);\n    },\n    addSong({ commit, dispatch }) {\n      // Create a new song object with default values\n      const song = {\n        id: new Date().getTime(), // Unique id based on current timestamp\n        title: \"Untitled\",\n        mood: \"\",\n        hook: \"\",\n        theme: \"\", // New theme property\n        narrativeOutline: \"\",\n        sections: [], // Ensure sections is always an array\n        lastEdit: new Date().toISOString(), // Current timestamp\n      };\n      // Commit the ADD_SONG mutation with the new song\n      commit(\"ADD_SONG\", song);\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    addActiveSongSection({ commit, dispatch }, section) {\n      // Set the isMinimized property to true for new sections\n      const newSection = {\n        ...section,\n        isMinimized: true,\n      };\n      // Commit the ADD_ACTIVE_SONG_SECTION mutation with the new section\n      commit(\"ADD_ACTIVE_SONG_SECTION\", newSection);\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    deleteSong({ commit, dispatch }, value) {\n      // Commit the DELETE_SONG mutation with the song id\n      commit(\"DELETE_SONG\", value);\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    updateSong({ commit, dispatch }, value) {\n      // Commit the UPDATE_SONG mutation with the updated song\n      commit(\"UPDATE_SONG\", value);\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    setActiveSong({ commit, dispatch }, value) {\n      // Commit the SET_ACTIVE_SONG mutation with the song to set as active\n      commit(\"SET_ACTIVE_SONG\", value);\n      // Update chord progressions based on the active song's scale and key\n      dispatch(\"updateChordProgressions\");\n    },\n    updateActiveSongSection({ commit, dispatch }, section) {\n      // Commit the UPDATE_ACTIVE_SONG_SECTION mutation with the section\n      commit(\"UPDATE_ACTIVE_SONG_SECTION\", section);\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    moveActiveSongSection({ commit, dispatch }, payload) {\n      // Commit the MOVE_ACTIVE_SONG_SECTION mutation with the payload\n      commit(\"MOVE_ACTIVE_SONG_SECTION\", payload);\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    deleteActiveSongSection({ commit, dispatch }, sectionId) {\n      // Commit the DELETE_ACTIVE_SONG_SECTION mutation with the section id\n      commit(\"DELETE_ACTIVE_SONG_SECTION\", sectionId);\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    updateActiveSongLine({ commit, dispatch }, payload) {\n      // Commit the UPDATE_ACTIVE_SONG_LINE mutation with the payload\n      commit(\"UPDATE_ACTIVE_SONG_LINE\", payload);\n      // Save the updated state to local storage\n      dispatch(\"saveStateToLocalStorage\");\n    },\n    addActiveSongLine({ commit, dispatch }, payload) {\n      commit(\"ADD_ACTIVE_SONG_LINE\", payload);\n      dispatch(\"saveStateToLocalStorage\");\n    },\n    deleteActiveSongLine({ commit, dispatch }, payload) {\n      commit(\"DELETE_ACTIVE_SONG_LINE\", payload);\n      dispatch(\"saveStateToLocalStorage\");\n    },\n    resetStore({ commit, dispatch }) {\n      // Commit the RESET_STORE mutation to reset the store\n      commit(\"RESET_STORE\");\n      dispatch(\"saveStateToLocalStorage\"); // Save state to local storage\n    },\n    saveStateToLocalStorage({ state }) {\n      localStorage.setItem(\"songs\", JSON.stringify(state.songs));\n      localStorage.setItem(\"activeSong\", JSON.stringify(state.activeSong));\n      console.log(\"State saved to local storage\");\n    },\n    loadStateFromLocalStorage({ commit }) {\n      const songs = JSON.parse(localStorage.getItem(\"songs\")) || [];\n      const activeSong = JSON.parse(localStorage.getItem(\"activeSong\")) || null;\n      commit(\"SET_SONGS\", songs);\n      commit(\"SET_ACTIVE_SONG\", activeSong);\n      console.log(\"State loaded from local storage\");\n    },\n    updateChordProgressions({ state, commit }) {\n      const selectedKey = state.activeSong?.key;\n      const selectedScale = state.scales.find(\n        (s) => s.name === state.activeSong?.scale\n      );\n      if (selectedKey && selectedScale) {\n        let chordProgressions;\n        switch (selectedScale.name.toLowerCase()) {\n          case \"major\":\n            chordProgressions = state.majorProgressions;\n            break;\n          case \"minor\":\n            chordProgressions = state.minorProgressions;\n            break;\n          case \"dorian\":\n            chordProgressions = state.dorianProgressions;\n            break;\n          case \"phrygian\":\n            chordProgressions = state.phrygianProgressions;\n            break;\n          case \"lydian\":\n            chordProgressions = state.lydianProgressions;\n            break;\n          case \"mixolydian\":\n            chordProgressions = state.mixolydianProgressions;\n            break;\n          case \"locrian\":\n            chordProgressions = state.locrianProgressions;\n            break;\n          case \"minor pentatonic\":\n            chordProgressions = state.minorPentatonicProgressions;\n            break;\n          case \"minor blues\":\n            chordProgressions = state.minorBluesProgressions;\n            break;\n          case \"major pentatonic\":\n            chordProgressions = state.majorPentatonicProgressions;\n            break;\n          case \"major blues\":\n            chordProgressions = state.majorBluesProgressions;\n            break;\n          case \"harmonic minor\":\n            chordProgressions = state.harmonicProgressions;\n            break;\n          case \"melodic minor\":\n            chordProgressions = state.melodicMinorProgressions;\n            break;\n          default:\n            chordProgressions = [];\n        }\n        commit(\"SET_CHORD_PROGRESSIONS\", chordProgressions);\n      } else {\n        commit(\"SET_CHORD_PROGRESSIONS\", [\n          ...state.majorProgressions,\n          ...state.minorProgressions,\n        ]);\n      }\n    },\n    startAutoSave({ dispatch }) {\n      setInterval(() => {\n        dispatch(\"saveStateToLocalStorage\");\n      }, 5000);\n    },\n    saveActiveSong({ commit }) {\n      commit(\"SAVE_ACTIVE_SONG\");\n    },\n  },\n  getters: {\n    getAvailableProgressions(state) {\n      return state.chordProgressions;\n    },\n    getUnsavedChanges(state) {\n      // Return the unsaved changes state\n      return state.unsavedChanges;\n    },\n    getSongs(state) {\n      // Return the songs state\n      return state.songs;\n    },\n    getActiveSong(state) {\n      // Return the active song state\n      return state.activeSong;\n    },\n    user(state) {\n      // Return the authenticated user\n      return state.user;\n    },\n    getSectionTemplates(state) {\n      return state.sectionTemplates;\n    },\n    getMoods(state) {\n      return state.moods;\n    },\n    getKeys(state) {\n      return state.keys;\n    },\n    getScales(state) {\n      return state.scales;\n    },\n    getPrompts(state) {\n      return state.prompts;\n    },\n    getChordProgressions(state) {\n      return state.chordProgressions;\n    },\n    getSelectedScaleNotes(state) {\n      const selectedScale = state.scales.find(\n        (s) => s.name === state.activeSong?.scale\n      );\n      return selectedScale\n        ? selectedScale.notes(state.activeSong?.key)\n        : [];\n    },\n    getSelectedScaleChords(state) {\n      const selectedScale = state.scales.find(\n        (s) => s.name === state.activeSong?.scale\n      );\n      return selectedScale ? selectedScale.chords : [];\n    },\n    getSectionById: (state) => (songId, sectionId) => {\n      const song = state.songs.find((song) => song.id === songId);\n      return song ? song.sections.find((section) => section.id === sectionId) : null;\n    },\n  },\n});\n\n// Load state from local storage on initialization\nstore.dispatch(\"loadStateFromLocalStorage\");\nstore.dispatch(\"startAutoSave\");\n\nexport default store;\n","import { createRouter, createWebHistory } from \"vue-router\";\nimport store from \"@/store/store\";\n\nimport ActivityView from \"@/views/ActivityView.vue\";\n\nconst routes = [\n  {\n    path: store.getters.useLandingPage ? \"/activity\" : \"/\",\n    name: \"ActivityView\", // Ensure the name matches\n    component: ActivityView,\n  },\n];\n\nconst router = createRouter({\n  linkExactActiveClass: \"fw-bold\",\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n","import { createApp } from \"vue\";\nimport App from \"@/App.vue\";\nimport store from \"@/store/store\";\nimport router from \"@/router/router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"@/css/style.css\";\nimport \"popper.js\";\n\nasync function initializeApp() {\n  createApp(App).use(store).use(router).mount(\"#app\");\n}\n\ninitializeApp();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/lyric-writing-assistant/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklyric_writing_assistant\"] = self[\"webpackChunklyric_writing_assistant\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(160); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_ActivityView","class","key","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_SongLibrary","_hoisted_4","_hoisted_5","_ctx","activeSong","id","songs","length","_component_SongComplete","song","plainTextActive","$data","onTogglePlainText","$options","togglePlainText","_hoisted_6","_component_PlainTextLayout","_createCommentVNode","_toDisplayString","formattedSong","onClick","_cache","args","copyToClipboard","name","computed","mapGetters","this","result","title","mood","theme","hook","scale","sections","forEach","section","type","toUpperCase","chordProgression","lines","line","methods","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","__exports__","_normalizeClass","getUnsavedChanges","saveActiveSongToStore","_hoisted_7","_hoisted_8","for","$event","onBlur","manualSaveState","_hoisted_9","_hoisted_10","onChange","disabled","_Fragment","_renderList","getMoods","_hoisted_11","selectedMoodImplication","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","getKeys","_hoisted_16","_hoisted_17","_hoisted_18","getScales","emotionalQuality","_hoisted_19","_component_ChordTable","_hoisted_20","_hoisted_21","selectedTheme","handleThemeChange","getPrompts","prompt","_hoisted_22","selectRandomPrompt","_hoisted_23","placeholder","_hoisted_24","rows","narrativeOutline","onInput","autoResize","ref","_component_ChromeMusicLab","_hoisted_25","_hoisted_26","_hoisted_27","selectedTemplate","_hoisted_28","innerHTML","arrangementVisualized","selectedTemplateArrangement","_hoisted_29","getSectionTemplates","template","arrangementText","arrangement","_hoisted_30","confirmApplyTemplate","orderedSections","index","_component_SongSection","sectionId","isFirst","isLast","createSection","activatePlainTextView","$props","_hoisted_31","isMinimized","_createTextVNode","_component_CountdownTimer","confirmRemoveSelf","moveSelf","_component_RhymeThesaurusPanel","brainstormingText","saveModifiedSectionToActiveSongInVuex","setUnsavedChanges","sectionNarrative","availableProgressions","selectedProgression","applyChordProgression","progression","localLines","updateLine","moveLine","removeLine","addLine","href","target","role","timerEnded","formattedTime","decrementTime","incrementTime","resetTime","data","minutes","seconds","timer","audio","Audio","require","startTimer","setInterval","clearInterval","play","setTimeout","style","sanitizedRhymeQuery","onKeyup","_withKeys","fetchRhymesAndSynonyms","loading","rhymes","synonyms","rawDictionaryResults","clearResults","entry","hwi","hw","fl","shortdef","def","defIndex","oneSyllableRhymes","rhyme","word","twoSyllableRhymes","threePlusSyllableRhymes","slice","synonym","idioms","idiom","relatedWords","related","_createStaticVNode","rhymeQuery","rawThesaurusResults","get","set","DOMPurify","sanitize","filter","syllables","trim","dictionaryResponse","fetch","dictionaryData","json","synonymResponse","synonymData","meta","syns","flat","rel_list","rhymeResponse","rhymeData","map","console","log","error","props","Number","required","Boolean","default","components","CountdownTimer","RhymeThesaurusPanel","isCustomProgression","find","sec","mapActions","direction","confirm","removeSelf","deleteActiveSongSection","addActiveSongLine","newLine","deleteActiveSongLine","lineIndex","$emit","updatedSection","updateActiveSongSection","$parent","selectedKey","selectedScale","notes","chordMap","I","II","ii","iii","IV","V","vi","i","III","iv","v","VI","VII","split","roman","join","updateActiveSongLine","watch","handler","newSection","immediate","deep","minimized","toggleMinimize","src","frameborder","Object","tempo","measureLength","adjustedRomanNumerals","numeral","adjustedScaleNotes","note","displayNotation","adjustedScaleChords","degree","colorCoding","chord","ref_for","$store","getters","getActiveSong","s","selectedScaleNotes","getSelectedScaleNotes","selectedScaleChords","getSelectedScaleChords","isPentatonicScale","romanNumerals","toLowerCase","includes","mounted","renderGuitarChords","_","container","$refs","chordContainer","chordName","getChordName","chordData","getChordData","fingers","SVGuitarChord","barres","draw","SongSection","ChromeMusicLab","ChordTable","customString","sort","a","b","order","t","m","implications","newSong","$nextTick","narrativeTextarea","updateChordProgressions","updateSong","saveStateToLocalStorage","applyTemplate","sectionType","Date","getTime","selectedChordProgression","setActiveSong","sectionLabel","addActiveSongSection","removeSection","moveSection","temp","idx","badgeClass","event","textarea","height","scrollHeight","randomIndex","Math","floor","random","saveActiveSong","scope","showTooltip","getSongs","selectSong","activeSongId","formatDate","lastEdit","confirmRemoveSong","selectedSong","addSong","removeSong","alert","deleteSong","refreshAppState","resetStore","setSongs","dateString","date","options","month","day","year","hour","minute","hour12","toLocaleString","replace","newActiveSong","SongLibrary","SongComplete","PlainTextLayout","unsavedChanges","ActivityView","render","sectionTemplates","moods","keys","scales","intervals","generateScale","chords","startIndex","indexOf","Error","push","interval","step","prompts","store","createStore","state","JSON","parse","localStorage","getItem","majorProgressions","minorProgressions","dorianProgressions","phrygianProgressions","lydianProgressions","mixolydianProgressions","locrianProgressions","minorPentatonicProgressions","minorBluesProgressions","majorPentatonicProgressions","majorBluesProgressions","harmonicProgressions","melodicMinorProgressions","chordProgressions","mutations","SET_UNSAVED_CHANGES","SET_SONGS","ADD_SONG","DELETE_SONG","findIndex","splice","UPDATE_SONG","toISOString","SET_ACTIVE_SONG","UPDATE_ACTIVE_SONG_SECTION","MOVE_ACTIVE_SONG_SECTION","ADD_ACTIVE_SONG_SECTION","DELETE_ACTIVE_SONG_SECTION","UPDATE_ACTIVE_SONG_LINE","ADD_ACTIVE_SONG_LINE","DELETE_ACTIVE_SONG_LINE","SET_CHORD_PROGRESSIONS","progressions","SAVE_ACTIVE_SONG","actions","commit","dispatch","moveActiveSongSection","payload","setItem","stringify","loadStateFromLocalStorage","startAutoSave","getAvailableProgressions","user","getChordProgressions","getSectionById","songId","routes","path","useLandingPage","component","router","createRouter","linkExactActiveClass","history","createWebHistory","process","async","initializeApp","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}